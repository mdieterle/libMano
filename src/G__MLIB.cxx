//
// File generated by rootcint at Mon Sep  7 15:12:22 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIG__MLIB
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__MLIB.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMEBin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMEBin(void *p = 0);
   static void *newArray_TMEBin(Long_t size, void *p);
   static void delete_TMEBin(void *p);
   static void deleteArray_TMEBin(void *p);
   static void destruct_TMEBin(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMEBin*)
   {
      ::TMEBin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMEBin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMEBin", ::TMEBin::Class_Version(), "./include/TMEBin.h", 20,
                  typeid(::TMEBin), DefineBehavior(ptr, ptr),
                  &::TMEBin::Dictionary, isa_proxy, 4,
                  sizeof(::TMEBin) );
      instance.SetNew(&new_TMEBin);
      instance.SetNewArray(&newArray_TMEBin);
      instance.SetDelete(&delete_TMEBin);
      instance.SetDeleteArray(&deleteArray_TMEBin);
      instance.SetDestructor(&destruct_TMEBin);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMEBin*)
   {
      return GenerateInitInstanceLocal((::TMEBin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMEBin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCollection(void *p = 0);
   static void *newArray_TMCollection(Long_t size, void *p);
   static void delete_TMCollection(void *p);
   static void deleteArray_TMCollection(void *p);
   static void destruct_TMCollection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCollection*)
   {
      ::TMCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCollection", ::TMCollection::Class_Version(), "./include/TMCollection.h", 26,
                  typeid(::TMCollection), DefineBehavior(ptr, ptr),
                  &::TMCollection::Dictionary, isa_proxy, 4,
                  sizeof(::TMCollection) );
      instance.SetNew(&new_TMCollection);
      instance.SetNewArray(&newArray_TMCollection);
      instance.SetDelete(&delete_TMCollection);
      instance.SetDeleteArray(&deleteArray_TMCollection);
      instance.SetDestructor(&destruct_TMCollection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCollection*)
   {
      return GenerateInitInstanceLocal((::TMCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMFitCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMFitCollection(void *p = 0);
   static void *newArray_TMFitCollection(Long_t size, void *p);
   static void delete_TMFitCollection(void *p);
   static void deleteArray_TMFitCollection(void *p);
   static void destruct_TMFitCollection(void *p);
   static void streamer_TMFitCollection(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMFitCollection*)
   {
      ::TMFitCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMFitCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMFitCollection", ::TMFitCollection::Class_Version(), "./include/TMFitCollection.h", 30,
                  typeid(::TMFitCollection), DefineBehavior(ptr, ptr),
                  &::TMFitCollection::Dictionary, isa_proxy, 1,
                  sizeof(::TMFitCollection) );
      instance.SetNew(&new_TMFitCollection);
      instance.SetNewArray(&newArray_TMFitCollection);
      instance.SetDelete(&delete_TMFitCollection);
      instance.SetDeleteArray(&deleteArray_TMFitCollection);
      instance.SetDestructor(&destruct_TMFitCollection);
      instance.SetStreamerFunc(&streamer_TMFitCollection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMFitCollection*)
   {
      return GenerateInitInstanceLocal((::TMFitCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMFitCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCombinedFunctor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCombinedFunctor(void *p = 0);
   static void *newArray_TMCombinedFunctor(Long_t size, void *p);
   static void delete_TMCombinedFunctor(void *p);
   static void deleteArray_TMCombinedFunctor(void *p);
   static void destruct_TMCombinedFunctor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCombinedFunctor*)
   {
      ::TMCombinedFunctor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCombinedFunctor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCombinedFunctor", ::TMCombinedFunctor::Class_Version(), "./include/TMCombinedFunctor.h", 21,
                  typeid(::TMCombinedFunctor), DefineBehavior(ptr, ptr),
                  &::TMCombinedFunctor::Dictionary, isa_proxy, 4,
                  sizeof(::TMCombinedFunctor) );
      instance.SetNew(&new_TMCombinedFunctor);
      instance.SetNewArray(&newArray_TMCombinedFunctor);
      instance.SetDelete(&delete_TMCombinedFunctor);
      instance.SetDeleteArray(&deleteArray_TMCombinedFunctor);
      instance.SetDestructor(&destruct_TMCombinedFunctor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCombinedFunctor*)
   {
      return GenerateInitInstanceLocal((::TMCombinedFunctor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCombinedFunctor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMCombinedFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCombinedFit(void *p = 0);
   static void *newArray_TMCombinedFit(Long_t size, void *p);
   static void delete_TMCombinedFit(void *p);
   static void deleteArray_TMCombinedFit(void *p);
   static void destruct_TMCombinedFit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCombinedFit*)
   {
      ::TMCombinedFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCombinedFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCombinedFit", ::TMCombinedFit::Class_Version(), "./include/TMCombinedFit.h", 56,
                  typeid(::TMCombinedFit), DefineBehavior(ptr, ptr),
                  &::TMCombinedFit::Dictionary, isa_proxy, 4,
                  sizeof(::TMCombinedFit) );
      instance.SetNew(&new_TMCombinedFit);
      instance.SetNewArray(&newArray_TMCombinedFit);
      instance.SetDelete(&delete_TMCombinedFit);
      instance.SetDeleteArray(&deleteArray_TMCombinedFit);
      instance.SetDestructor(&destruct_TMCombinedFit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCombinedFit*)
   {
      return GenerateInitInstanceLocal((::TMCombinedFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCombinedFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMEnergyThetaCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMEnergyThetaCut(void *p = 0);
   static void *newArray_TMEnergyThetaCut(Long_t size, void *p);
   static void delete_TMEnergyThetaCut(void *p);
   static void deleteArray_TMEnergyThetaCut(void *p);
   static void destruct_TMEnergyThetaCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMEnergyThetaCut*)
   {
      ::TMEnergyThetaCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMEnergyThetaCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMEnergyThetaCut", ::TMEnergyThetaCut::Class_Version(), "./include/TMEnergyThetaCut.h", 23,
                  typeid(::TMEnergyThetaCut), DefineBehavior(ptr, ptr),
                  &::TMEnergyThetaCut::Dictionary, isa_proxy, 4,
                  sizeof(::TMEnergyThetaCut) );
      instance.SetNew(&new_TMEnergyThetaCut);
      instance.SetNewArray(&newArray_TMEnergyThetaCut);
      instance.SetDelete(&delete_TMEnergyThetaCut);
      instance.SetDeleteArray(&deleteArray_TMEnergyThetaCut);
      instance.SetDestructor(&destruct_TMEnergyThetaCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMEnergyThetaCut*)
   {
      return GenerateInitInstanceLocal((::TMEnergyThetaCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMEnergyThetaCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace TMFunctor {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TMFunctor_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TMFunctor", 0 /*version*/, "./include/TMFunctor.h", 31,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TMFunctor_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TMFunctor_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace TMTools {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TMTools_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TMTools", 0 /*version*/, "./include/TMTools.h", 40,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TMTools_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TMTools_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TMObjectCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMObjectCollection(void *p = 0);
   static void *newArray_TMObjectCollection(Long_t size, void *p);
   static void delete_TMObjectCollection(void *p);
   static void deleteArray_TMObjectCollection(void *p);
   static void destruct_TMObjectCollection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMObjectCollection*)
   {
      ::TMObjectCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMObjectCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMObjectCollection", ::TMObjectCollection::Class_Version(), "./include/TMObjectCollection.h", 25,
                  typeid(::TMObjectCollection), DefineBehavior(ptr, ptr),
                  &::TMObjectCollection::Dictionary, isa_proxy, 4,
                  sizeof(::TMObjectCollection) );
      instance.SetNew(&new_TMObjectCollection);
      instance.SetNewArray(&newArray_TMObjectCollection);
      instance.SetDelete(&delete_TMObjectCollection);
      instance.SetDeleteArray(&deleteArray_TMObjectCollection);
      instance.SetDestructor(&destruct_TMObjectCollection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMObjectCollection*)
   {
      return GenerateInitInstanceLocal((::TMObjectCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMObjectCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace TMCuts {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TMCuts_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TMCuts", 0 /*version*/, "./include/TMCuts.h", 38,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TMCuts_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TMCuts_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TMFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMFit(void *p = 0);
   static void *newArray_TMFit(Long_t size, void *p);
   static void delete_TMFit(void *p);
   static void deleteArray_TMFit(void *p);
   static void destruct_TMFit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMFit*)
   {
      ::TMFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMFit", ::TMFit::Class_Version(), "./include/TMFit.h", 41,
                  typeid(::TMFit), DefineBehavior(ptr, ptr),
                  &::TMFit::Dictionary, isa_proxy, 4,
                  sizeof(::TMFit) );
      instance.SetNew(&new_TMFit);
      instance.SetNewArray(&newArray_TMFit);
      instance.SetDelete(&delete_TMFit);
      instance.SetDeleteArray(&deleteArray_TMFit);
      instance.SetDestructor(&destruct_TMFit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMFit*)
   {
      return GenerateInitInstanceLocal((::TMFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TMPluto_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TMPluto(void *p);
   static void deleteArray_TMPluto(void *p);
   static void destruct_TMPluto(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMPluto*)
   {
      ::TMPluto *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMPluto >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMPluto", ::TMPluto::Class_Version(), "./include/TMPluto.h", 27,
                  typeid(::TMPluto), DefineBehavior(ptr, ptr),
                  &::TMPluto::Dictionary, isa_proxy, 4,
                  sizeof(::TMPluto) );
      instance.SetDelete(&delete_TMPluto);
      instance.SetDeleteArray(&deleteArray_TMPluto);
      instance.SetDestructor(&destruct_TMPluto);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMPluto*)
   {
      return GenerateInitInstanceLocal((::TMPluto*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMPluto*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMEBin::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMEBin::Class_Name()
{
   return "TMEBin";
}

//______________________________________________________________________________
const char *TMEBin::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMEBin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMEBin::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMEBin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMEBin::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMEBin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMEBin::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMEBin*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCollection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCollection::Class_Name()
{
   return "TMCollection";
}

//______________________________________________________________________________
const char *TMCollection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCollection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCollection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCollection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCollection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMFitCollection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMFitCollection::Class_Name()
{
   return "TMFitCollection";
}

//______________________________________________________________________________
const char *TMFitCollection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMFitCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMFitCollection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMFitCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMFitCollection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMFitCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMFitCollection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMFitCollection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCombinedFunctor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCombinedFunctor::Class_Name()
{
   return "TMCombinedFunctor";
}

//______________________________________________________________________________
const char *TMCombinedFunctor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFunctor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCombinedFunctor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFunctor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCombinedFunctor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFunctor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCombinedFunctor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFunctor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMCombinedFit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCombinedFit::Class_Name()
{
   return "TMCombinedFit";
}

//______________________________________________________________________________
const char *TMCombinedFit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCombinedFit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCombinedFit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCombinedFit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCombinedFit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMEnergyThetaCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMEnergyThetaCut::Class_Name()
{
   return "TMEnergyThetaCut";
}

//______________________________________________________________________________
const char *TMEnergyThetaCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMEnergyThetaCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMEnergyThetaCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMEnergyThetaCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMEnergyThetaCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMEnergyThetaCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMEnergyThetaCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMEnergyThetaCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMObjectCollection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMObjectCollection::Class_Name()
{
   return "TMObjectCollection";
}

//______________________________________________________________________________
const char *TMObjectCollection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMObjectCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMObjectCollection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMObjectCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMObjectCollection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMObjectCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMObjectCollection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMObjectCollection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMFit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMFit::Class_Name()
{
   return "TMFit";
}

//______________________________________________________________________________
const char *TMFit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMFit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMFit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMFit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMFit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMPluto::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMPluto::Class_Name()
{
   return "TMPluto";
}

//______________________________________________________________________________
const char *TMPluto::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMPluto*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMPluto::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMPluto*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMPluto::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMPluto*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMPluto::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMPluto*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMEBin::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMEBin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMEBin::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMEBin::Class(),this);
   }
}

//______________________________________________________________________________
void TMEBin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMEBin.
      TClass *R__cl = ::TMEBin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyError", &fEnergyError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTaggCh", &nTaggCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iTaggCh", &iTaggCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTaggCh", &fNTaggCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaggChLo", &fTaggChLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaggChUp", &fTaggChUp);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMEBin(void *p) {
      return  p ? new(p) ::TMEBin : new ::TMEBin;
   }
   static void *newArray_TMEBin(Long_t nElements, void *p) {
      return p ? new(p) ::TMEBin[nElements] : new ::TMEBin[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMEBin(void *p) {
      delete ((::TMEBin*)p);
   }
   static void deleteArray_TMEBin(void *p) {
      delete [] ((::TMEBin*)p);
   }
   static void destruct_TMEBin(void *p) {
      typedef ::TMEBin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMEBin

//______________________________________________________________________________
void TMObjectCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMObjectCollection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMObjectCollection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMObjectCollection::Class(),this);
   }
}

//______________________________________________________________________________
void TMObjectCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMObjectCollection.
      TClass *R__cl = ::TMObjectCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHisto", &nHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strDat", &strDat);
      R__insp.InspectMember(strDat, "strDat.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strEmpty", &strEmpty);
      R__insp.InspectMember(strEmpty, "strEmpty.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strSig", &strSig);
      R__insp.InspectMember(strSig, "strSig.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strSig1", &strSig1);
      R__insp.InspectMember(strSig1, "strSig1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strSig2", &strSig2);
      R__insp.InspectMember(strSig2, "strSig2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strBG", &strBG);
      R__insp.InspectMember(strBG, "strBG.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strTot", &strTot);
      R__insp.InspectMember(strTot, "strTot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strArr", &strArr);
      R__insp.InspectMember(strArr, "strArr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strBin", &strBin);
      R__insp.InspectMember(strBin, "strBin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strFit", &strFit);
      R__insp.InspectMember(strFit, "strFit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nArr", &nArr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCT", &nCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iCT", &iCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMM", &nMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iMM", &iMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yMin", &yMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yMax", &yMax);
      TMCollection::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMObjectCollection(void *p) {
      return  p ? new(p) ::TMObjectCollection : new ::TMObjectCollection;
   }
   static void *newArray_TMObjectCollection(Long_t nElements, void *p) {
      return p ? new(p) ::TMObjectCollection[nElements] : new ::TMObjectCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMObjectCollection(void *p) {
      delete ((::TMObjectCollection*)p);
   }
   static void deleteArray_TMObjectCollection(void *p) {
      delete [] ((::TMObjectCollection*)p);
   }
   static void destruct_TMObjectCollection(void *p) {
      typedef ::TMObjectCollection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMObjectCollection

//______________________________________________________________________________
void TMFitCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMFitCollection.
      TClass *R__cl = ::TMFitCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBG", &fNBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCTbins", &fNCTbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEbins", &fNEbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRep", &fRep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oDatIn", &oDatIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oSigIn", &oSigIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oBGIn", &oBGIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oDat", &oDat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oSig", &oSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oBG", &oBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oBGTot", &oBGTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oTot", &oTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oFit", &oFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCTlo", &fCTlo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCTup", &fCTup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPar", &fPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParErr", &fParErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChiSquare", &fChiSquare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChiMax", &fChiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitCT", &fFitCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitE", &fFitE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutMeanE", &fCutMeanE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutSigmaE", &fCutSigmaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutLoE", &fCutLoE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutUpE", &fCutUpE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutMeanCT", &fCutMeanCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutSigmaCT", &fCutSigmaCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutLoCT", &fCutLoCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutUpCT", &fCutUpCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gParCT", &gParCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gParE", &gParE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gSBCT", &gSBCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gSBE", &gSBE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutMeanE", &gCutMeanE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutSigmaE", &gCutSigmaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutLoE", &gCutLoE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutUpE", &gCutUpE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutMeanCT", &gCutMeanCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutSigmaCT", &gCutSigmaCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutLoCT", &gCutLoCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gCutUpCT", &gCutUpCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gChiSquareE", &gChiSquareE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gChiSquareCT", &gChiSquareCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolMeanE", &szPolMeanE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolSigmaE", &szPolSigmaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolLoE", &szPolLoE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolUpE", &szPolUpE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolMeanCT", &szPolMeanCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolSigmaCT", &szPolSigmaCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolLoCT", &szPolLoCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szPolUpCT", &szPolUpCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGmin", &fGmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGmax", &fGmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGMmin", &fGMmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGMmax", &fGMmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGMtol", &fGMtol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGSmin", &fGSmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGSmax", &fGSmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGHmin", &fGHmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGHmax", &fGHmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMin", &fMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax", &fMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLo", &fLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUp", &fUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigma", &fSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eCut", &eCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eff", &eff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sb", &sb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBR", &fBR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTD", &fTD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIM", &fIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sExFunc", &sExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kAll", &kAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hIM", &hIM);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMFitCollection(void *p) {
      return  p ? new(p) ::TMFitCollection : new ::TMFitCollection;
   }
   static void *newArray_TMFitCollection(Long_t nElements, void *p) {
      return p ? new(p) ::TMFitCollection[nElements] : new ::TMFitCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMFitCollection(void *p) {
      delete ((::TMFitCollection*)p);
   }
   static void deleteArray_TMFitCollection(void *p) {
      delete [] ((::TMFitCollection*)p);
   }
   static void destruct_TMFitCollection(void *p) {
      typedef ::TMFitCollection current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMFitCollection(TBuffer &buf, void *obj) {
      ((::TMFitCollection*)obj)->::TMFitCollection::Streamer(buf);
   }
} // end of namespace ROOT for class ::TMFitCollection

//______________________________________________________________________________
void TMCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCollection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCollection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCollection::Class(),this);
   }
}

//______________________________________________________________________________
void TMCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCollection.
      TClass *R__cl = ::TMCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCollection", &fCollection);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMCollection(void *p) {
      return  p ? new(p) ::TMCollection : new ::TMCollection;
   }
   static void *newArray_TMCollection(Long_t nElements, void *p) {
      return p ? new(p) ::TMCollection[nElements] : new ::TMCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCollection(void *p) {
      delete ((::TMCollection*)p);
   }
   static void deleteArray_TMCollection(void *p) {
      delete [] ((::TMCollection*)p);
   }
   static void destruct_TMCollection(void *p) {
      typedef ::TMCollection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCollection

//______________________________________________________________________________
void TMFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMFit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMFit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMFit::Class(),this);
   }
}

//______________________________________________________________________________
void TMFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMFit.
      TClass *R__cl = ::TMFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fc", &fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBG", &fNBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCTbins", &fNCTbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEbins", &fNEbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRep", &fRep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNameBGall", &hNameBGall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIBGall", &fIBGall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIBG", &fIBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBGall", &fNBGall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRebin", &fRebin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrac", &fFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargDens", &fTargDens);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBrRatio", &fBrRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIM", &fIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kTwoSig", &kTwoSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFitE", &kFitE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kExFunc", &kExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kIntAll", &kIntAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kEff", &kEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cData", &cData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cMCsig", &cMCsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cMCsig1", &cMCsig1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cMCsig2", &cMCsig2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cMCbg", &cMCbg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cEff", &cEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cBGconfig", &cBGconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cBGconfig1", &cBGconfig1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cBGconfig2", &cBGconfig2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cBGindices", &cBGindices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cCutHisto", &cCutHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cExFunc", &cExFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cAxis", &cAxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParFitMeth", &cParFitMeth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParFitPolCT", &cParFitPolCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParFitPolE", &cParFitPolE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cFitOpt", &cFitOpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGloMin", &fGloMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGloMax", &fGloMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigMin", &fSigMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigMax", &fSigMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigHeightMin", &fSigHeightMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigHeightMax", &fSigHeightMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParMin", &fParMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParMax", &fParMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauMin", &fGauMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauMax", &fGauMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauHeightMin", &fGauHeightMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauHeightMax", &fGauHeightMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauMeanMin", &fGauMeanMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauMeanMax", &fGauMeanMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauMeanTol", &fGauMeanTol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauSigmaMin", &fGauSigmaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGauSigmaMax", &fGauSigmaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigma", &fSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMin", &fMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax", &fMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitMin", &fFitMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitMax", &fFitMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParEPolMean", &cParEPolMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParEPolSigma", &cParEPolSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParEPolLo", &cParEPolLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParEPolUp", &cParEPolUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParCTPolMean", &cParCTPolMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParCTPolSigma", &cParCTPolSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParCTPolLo", &cParCTPolLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cParCTPolUp", &cParCTPolUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nIt", &nIt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPadX", &nPadX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPadY", &nPadY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndc", &ndc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xMin", &xMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xMax", &xMax);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMFit(void *p) {
      return  p ? new(p) ::TMFit : new ::TMFit;
   }
   static void *newArray_TMFit(Long_t nElements, void *p) {
      return p ? new(p) ::TMFit[nElements] : new ::TMFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMFit(void *p) {
      delete ((::TMFit*)p);
   }
   static void deleteArray_TMFit(void *p) {
      delete [] ((::TMFit*)p);
   }
   static void destruct_TMFit(void *p) {
      typedef ::TMFit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMFit

//______________________________________________________________________________
void TMCombinedFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCombinedFit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCombinedFit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCombinedFit::Class(),this);
   }
}

//______________________________________________________________________________
void TMCombinedFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCombinedFit.
      TClass *R__cl = ::TMCombinedFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCTBins", &nCTBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsW", &IsW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outName", &outName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dBG", &dBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dSig", &dSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfBG", &dfBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfSig", &dfSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dMM", &dMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dCop", &dCop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dIM", &dIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfMM", &dfMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfCop", &dfCop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfIM", &dfIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMMbg", &hMMbg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMMsig", &hMMsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCOPbg", &hCOPbg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCOPsig", &hCOPsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hIMbg", &hIMbg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hIMsig", &hIMsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFitCut", &kFitCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFixSig", &kFixSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFixBG", &kFixBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitMMLo", &fFitMMLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitMMUp", &fFitMMUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitCopLo", &fFitCopLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitCopUp", &fFitCopUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitIMLo", &fFitIMLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitIMUp", &fFitIMUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiglo", &fSiglo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigup", &fSigup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBGlo", &fBGlo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBGup", &fBGup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdBG", &fdBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdSig", &fdSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdSiglo", &fdSiglo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdSigup", &fdSigup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdBGlo", &fdBGlo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdBGup", &fdBGup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rebMM", &rebMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rebCop", &rebCop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rebIM", &rebIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefCS", &fRefCS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTot", &fTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBG", &fBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSig", &fSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEffTot", &fEffTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEffBG", &fEffBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEffSig", &fEffSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFlux", &fFlux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEff", &fEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotFluxScale", &fTotFluxScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBGFluxScale", &fBGFluxScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigFluxScale", &fSigFluxScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotNorm", &fTotNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBGNorm", &fBGNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigNorm", &fSigNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MMname", &MMname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Copname", &Copname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IMname", &IMname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMMcut", &fMMcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCopcut", &fCopcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIMcut", &fIMcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMM", &fMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCop", &fCop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIM", &fIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kMMcutW", &kMMcutW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kCopcutW", &kCopcutW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kIMcutW", &kIMcutW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigMM", &sigMM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigCop", &sigCop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigIM", &sigIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigMMuse", &sigMMuse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigCopuse", &sigCopuse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigIMuse", &sigIMuse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMCombinedFit(void *p) {
      return  p ? new(p) ::TMCombinedFit : new ::TMCombinedFit;
   }
   static void *newArray_TMCombinedFit(Long_t nElements, void *p) {
      return p ? new(p) ::TMCombinedFit[nElements] : new ::TMCombinedFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCombinedFit(void *p) {
      delete ((::TMCombinedFit*)p);
   }
   static void deleteArray_TMCombinedFit(void *p) {
      delete [] ((::TMCombinedFit*)p);
   }
   static void destruct_TMCombinedFit(void *p) {
      typedef ::TMCombinedFit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCombinedFit

//______________________________________________________________________________
void TMCombinedFunctor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCombinedFunctor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMCombinedFunctor::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMCombinedFunctor::Class(),this);
   }
}

//______________________________________________________________________________
void TMCombinedFunctor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCombinedFunctor.
      TClass *R__cl = ::TMCombinedFunctor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fB", &fB);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMCombinedFunctor(void *p) {
      return  p ? new(p) ::TMCombinedFunctor : new ::TMCombinedFunctor;
   }
   static void *newArray_TMCombinedFunctor(Long_t nElements, void *p) {
      return p ? new(p) ::TMCombinedFunctor[nElements] : new ::TMCombinedFunctor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCombinedFunctor(void *p) {
      delete ((::TMCombinedFunctor*)p);
   }
   static void deleteArray_TMCombinedFunctor(void *p) {
      delete [] ((::TMCombinedFunctor*)p);
   }
   static void destruct_TMCombinedFunctor(void *p) {
      typedef ::TMCombinedFunctor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMCombinedFunctor

//______________________________________________________________________________
void TMPluto::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMPluto.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMPluto::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMPluto::Class(),this);
   }
}

//______________________________________________________________________________
void TMPluto::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMPluto.
      TClass *R__cl = ::TMPluto::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "szReac", &szReac);
      R__insp.InspectMember(szReac, "szReac.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*szDis", &szDis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyMin", &energyMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyMax", &energyMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvents", &nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFiles", &nFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fName", &fName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLoc", &fLoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiam", &fDiam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsMkin", &IsMkin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strBeam", &strBeam);
      R__insp.InspectMember(strBeam, "strBeam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strTarget", &strTarget);
      R__insp.InspectMember(strTarget, "strTarget.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strPart", &strPart);
      R__insp.InspectMember(strPart, "strPart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strSpec", &strSpec);
      R__insp.InspectMember(strSpec, "strSpec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nGen", &nGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iIter", &iIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nPar", &nPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iHierarchy", &iHierarchy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*strDec", &strDec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*strHierarchy", &strHierarchy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iOrigGen", &iOrigGen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iOrigPar", &iOrigPar);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TMPluto(void *p) {
      delete ((::TMPluto*)p);
   }
   static void deleteArray_TMPluto(void *p) {
      delete [] ((::TMPluto*)p);
   }
   static void destruct_TMPluto(void *p) {
      typedef ::TMPluto current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMPluto

//______________________________________________________________________________
void TMEnergyThetaCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMEnergyThetaCut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMEnergyThetaCut::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMEnergyThetaCut::Class(),this);
   }
}

//______________________________________________________________________________
void TMEnergyThetaCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMEnergyThetaCut.
      TClass *R__cl = ::TMEnergyThetaCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCTBin", &fNCTBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutLowerFunc", &fCutLowerFunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCutUpperFunc", &fCutUpperFunc);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMEnergyThetaCut(void *p) {
      return  p ? new(p) ::TMEnergyThetaCut : new ::TMEnergyThetaCut;
   }
   static void *newArray_TMEnergyThetaCut(Long_t nElements, void *p) {
      return p ? new(p) ::TMEnergyThetaCut[nElements] : new ::TMEnergyThetaCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMEnergyThetaCut(void *p) {
      delete ((::TMEnergyThetaCut*)p);
   }
   static void deleteArray_TMEnergyThetaCut(void *p) {
      delete [] ((::TMEnergyThetaCut*)p);
   }
   static void destruct_TMEnergyThetaCut(void *p) {
      typedef ::TMEnergyThetaCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMEnergyThetaCut

/********************************************************
* src/G__MLIB.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__MLIB();

extern "C" void G__set_cpp_environmentG__MLIB() {
  G__cpp_reset_tagtableG__MLIB();
}
#include <new>
extern "C" int G__cpp_dllrevG__MLIB() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMEBin */
static int G__G__MLIB_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMEBin[n];
     } else {
       p = new((void*) gvp) TMEBin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMEBin;
     } else {
       p = new((void*) gvp) TMEBin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEBin* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMEBin(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) TMEBin(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEBin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMEBin*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TMEBin*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TMEBin*) G__getstructoffset())->GetEnergyError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMEBin*) G__getstructoffset())->GetNTotalTaggerChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMEBin*) G__getstructoffset())->GetNTaggerChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMEBin*) G__getstructoffset())->GetNTaggerChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMEBin*) G__getstructoffset())->GetTaggerChannelLo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMEBin*) G__getstructoffset())->GetTaggerChannelUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMEBin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEBin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMEBin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMEBin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMEBin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEBin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMEBin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEBin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_239_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMEBin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_239_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMEBin* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMEBin(*(TMEBin*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEBin));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMEBin G__TTMEBin;
static int G__G__MLIB_239_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMEBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMEBin*) (soff+(sizeof(TMEBin)*i)))->~G__TTMEBin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMEBin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMEBin*) (soff))->~G__TTMEBin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MLIB_239_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEBin* dest = (TMEBin*) G__getstructoffset();
   *dest = *(TMEBin*) libp->para[0].ref;
   const TMEBin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCollection */
static int G__G__MLIB_298_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TMCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCollection((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TMCollection((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMCollection[n];
       } else {
         p = new((void*) gvp) TMCollection[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TMCollection;
       } else {
         p = new((void*) gvp) TMCollection;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMCollection*) G__getstructoffset())->GetCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCollection*) G__getstructoffset())->AddObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCollection*) G__getstructoffset())->ListObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCollection*) G__getstructoffset())->GetObject((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMCollection*) G__getstructoffset())->IsObjectType((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCollection*) G__getstructoffset())->GetTF1((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMCollection*) G__getstructoffset())->GetTH1((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_298_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_298_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCollection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCollection(*(TMCollection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCollection G__TTMCollection;
static int G__G__MLIB_298_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCollection*) (soff+(sizeof(TMCollection)*i)))->~G__TTMCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCollection*) (soff))->~G__TTMCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MLIB_298_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCollection* dest = (TMCollection*) G__getstructoffset();
   *dest = *(TMCollection*) libp->para[0].ref;
   const TMCollection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMFitCollection */
static int G__G__MLIB_757_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMFitCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMFitCollection[n];
     } else {
       p = new((void*) gvp) TMFitCollection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMFitCollection;
     } else {
       p = new((void*) gvp) TMFitCollection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMFitCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMFitCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMFitCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->InitObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetDimensions((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetNumCosThetaBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetNumEnergyBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetNumBackground());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetNumIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetGaussianOpt(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddInputDataObject((Int_t) G__int(libp->para[0]), (TH2F*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddInputSignalObject((Int_t) G__int(libp->para[0]), (TH2F*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddInputBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TH2F*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddDataObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TH1D*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddSignalObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TH1D*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TH1D*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddTotalBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TH1D*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->AddFitObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetTotalHistos((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetPolynomialParameters((TF1*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMFitCollection*) G__getstructoffset())->GetMaximumAndPositionInRange((TH1D*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetEnergy((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetLowerCosTheta((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetUpperCosTheta((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitParameter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitParError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetChiSquare((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetMaxChiSquare((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetCTParameterFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetEParameterFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TF1*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetCTParameterGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGraphErrors*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetEParameterGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGraphErrors*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSBCTGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGraphErrors*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSBEGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGraphErrors*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetMeanCutGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSigmaCutGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetLowerCutGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetUpperCutGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetMeanCutGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSigmaCutGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetLowerCutGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetUpperCutGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetChiSquareGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetChiSquareGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetMeanCutFuncE((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSigmaCutFuncE((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetLowerCutFuncE((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetUpperCutFuncE((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetMeanCutFuncCT((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetSigmaCutFuncCT((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetLowerCutFuncCT((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetUpperCutFuncCT((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitLowerBoundary((Double_t) G__double(libp->para[0]), (Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitUpperBoundary((Double_t) G__double(libp->para[0]), (Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolMeanE((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolSigmaE((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolLoE((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolUpE((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolMeanCT((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolSigmaCT((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolLoCT((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetFitPolUpCT((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->SetExFuncCalcOpt((TOEnergyThetaData*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetInputDataObject((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetInputSignalObject((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetInputBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetDataObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSignalObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetTotalBackgroundObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetTotalObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetFitObject((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSBObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetEnergy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetLowerCosTheta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetUpperCosTheta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetEnergyBin((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMFitCollection*) G__getstructoffset())->GetCosThetaBin((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetFitParameter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetFitParError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetChiSquare((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetCTParameterFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetEParameterFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetMeanCutFuncE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSigmaCutFuncE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetLowerCutFuncE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetUpperCutFuncE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetMeanCutFuncCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSigmaCutFuncCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetLowerCutFuncCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetUpperCutFuncCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetCTParameterGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetEParameterGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSBCTGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSBEGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetMeanCutGraphE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSigmaCutGraphE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetLowerCutGraphE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetUpperCutGraphE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetMeanCutGraphCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetSigmaCutGraphCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetLowerCutGraphCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetUpperCutGraphCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetChiSquareGraphE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetChiSquareGraphCT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->GetCutsFromGaussian();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->CleanGraphE((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->CleanGraphCT((Int_t) G__int(libp->para[0]), (TGraphErrors*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->CalculateExcitationFunctions((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->RecalculateExcitationFunctions((TOEnergyThetaData*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->RecalculateExcFuncErrors((TOEnergyThetaData*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetCutObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetFitLowerBoundary((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMFitCollection*) G__getstructoffset())->GetFitUpperBoundary((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TMFitCollection*) G__getstructoffset())->GetFitPolMeanE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TMFitCollection*) G__getstructoffset())->GetFitPolSigmaE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TMFitCollection*) G__getstructoffset())->GetFitPolLoE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TMFitCollection*) G__getstructoffset())->GetFitPolUpE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMFitCollection*) G__getstructoffset())->GetExcitationFunction((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TMFitCollection*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TMFitCollection*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TMFitCollection*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TMFitCollection*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMFitCollection*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawChiSquareE((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawChiSquareCT((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawInputE((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawInputCT((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawCuts((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawParametersCT((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->DrawParametersE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMFitCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFitCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMFitCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMFitCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFitCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFitCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMFitCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFitCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_757_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMFitCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_757_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMFitCollection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMFitCollection(*(TMFitCollection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMFitCollection G__TTMFitCollection;
static int G__G__MLIB_757_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMFitCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMFitCollection*) (soff+(sizeof(TMFitCollection)*i)))->~G__TTMFitCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMFitCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMFitCollection*) (soff))->~G__TTMFitCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCombinedFunctor */
static int G__G__MLIB_758_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCombinedFunctor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCombinedFunctor[n];
     } else {
       p = new((void*) gvp) TMCombinedFunctor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCombinedFunctor;
     } else {
       p = new((void*) gvp) TMCombinedFunctor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCombinedFunctor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCombinedFunctor(
(TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TMCombinedFunctor(
(TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TMCombinedFunctor*) G__getstructoffset())->MyFitFunc((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCombinedFunctor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFunctor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCombinedFunctor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCombinedFunctor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFunctor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFunctor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCombinedFunctor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFunctor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_758_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCombinedFunctor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_758_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCombinedFunctor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCombinedFunctor(*(TMCombinedFunctor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCombinedFunctor G__TTMCombinedFunctor;
static int G__G__MLIB_758_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCombinedFunctor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCombinedFunctor*) (soff+(sizeof(TMCombinedFunctor)*i)))->~G__TTMCombinedFunctor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCombinedFunctor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCombinedFunctor*) (soff))->~G__TTMCombinedFunctor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MLIB_758_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCombinedFunctor* dest = (TMCombinedFunctor*) G__getstructoffset();
   *dest = *(TMCombinedFunctor*) libp->para[0].ref;
   const TMCombinedFunctor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCombinedFit */
static int G__G__MLIB_895_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCombinedFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCombinedFit[n];
     } else {
       p = new((void*) gvp) TMCombinedFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCombinedFit;
     } else {
       p = new((void*) gvp) TMCombinedFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCombinedFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCombinedFit((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMCombinedFit((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TMCombinedFit*) G__getstructoffset())->SetIsW((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMCombinedFit*) G__getstructoffset())->SetIsW();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TMCombinedFit*) G__getstructoffset())->SetMMcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMCombinedFit*) G__getstructoffset())->SetMMcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TMCombinedFit*) G__getstructoffset())->SetCopcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMCombinedFit*) G__getstructoffset())->SetCopcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TMCombinedFit*) G__getstructoffset())->SetIMcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMCombinedFit*) G__getstructoffset())->SetIMcut((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetMMsigma((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetCopsigma((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetIMsigma((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetFitCutRange((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->FixSignal((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->FixBackground((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetMMFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetCopFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetIMFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetStepSize((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetSignalParRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetBackgroundParRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetDilSignalParRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetDilBackgroundParRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetDilFitFuncs((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->RebinMMHisto((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->RebinCopHisto((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->RebinIMHisto((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetReferenceCrossSection((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetTotalDataFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetBackgroundDataFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetSignalDataFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetTotalEffFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetBackgroundEffFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetSignalEffFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetFluxName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetEffName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleTotalFlux((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleBackgroundFlux((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleSignalFlux((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleTotalHisto((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleBackgroundHisto((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->ScaleSignalHisto((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetMMname((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetCopname((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetIMname((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->SetNumCosThetaBin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->DivideFlux((TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->DivideEfficiency((TH2**) G__int(libp->para[0]), (TOEnergyThetaData*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->Fit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TMCombinedFit*) G__getstructoffset())->GetMinMaxRange((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCombinedFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCombinedFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCombinedFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCombinedFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCombinedFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCombinedFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_895_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCombinedFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_895_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCombinedFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCombinedFit(*(TMCombinedFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCombinedFit G__TTMCombinedFit;
static int G__G__MLIB_895_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCombinedFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCombinedFit*) (soff+(sizeof(TMCombinedFit)*i)))->~G__TTMCombinedFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCombinedFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCombinedFit*) (soff))->~G__TTMCombinedFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMEnergyThetaCut */
static int G__G__MLIB_899_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEnergyThetaCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMEnergyThetaCut[n];
     } else {
       p = new((void*) gvp) TMEnergyThetaCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMEnergyThetaCut;
     } else {
       p = new((void*) gvp) TMEnergyThetaCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEnergyThetaCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMEnergyThetaCut((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMEnergyThetaCut((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMEnergyThetaCut*) G__getstructoffset())->SetLowerFunc((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMEnergyThetaCut*) G__getstructoffset())->SetUpperFunc((Int_t) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMEnergyThetaCut*) G__getstructoffset())->GetLowerFunction((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TMEnergyThetaCut*) G__getstructoffset())->GetUpperFunction((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TMEnergyThetaCut*) G__getstructoffset())->IsInsideS((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMEnergyThetaCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEnergyThetaCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMEnergyThetaCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMEnergyThetaCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMEnergyThetaCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEnergyThetaCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMEnergyThetaCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMEnergyThetaCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_899_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMEnergyThetaCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_899_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMEnergyThetaCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMEnergyThetaCut(*(TMEnergyThetaCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMEnergyThetaCut G__TTMEnergyThetaCut;
static int G__G__MLIB_899_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMEnergyThetaCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMEnergyThetaCut*) (soff+(sizeof(TMEnergyThetaCut)*i)))->~G__TTMEnergyThetaCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMEnergyThetaCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMEnergyThetaCut*) (soff))->~G__TTMEnergyThetaCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MLIB_899_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMEnergyThetaCut* dest = (TMEnergyThetaCut*) G__getstructoffset();
   *dest = *(TMEnergyThetaCut*) libp->para[0].ref;
   const TMEnergyThetaCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMFunctor */
static int G__G__MLIB_900_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH1**) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH2**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH2**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH2**) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMFunctor::InitFunctor((Int_t) G__int(libp->para[0]), (TH2**) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMFunctor::SetParameters((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMFunctor::MyFitFuncMC((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMFunctor::MyFitFuncMC2D((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMFunctor::FitTH1Pol1((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMFunctor::Pol1Exc((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_900_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMFunctor::MyFitFuncEmpty((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMTools */
static int G__G__MLIB_901_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMTools::Get1DHisto(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMTools::Get2DHisto(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::Get2DCollectionSize((TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMTools::GetFirstNotEmptyBin((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TMTools::GetLastNotEmptyBin((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Bool_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Bool_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Bool_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Bool_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      TMTools::Draw2DCollection(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::Draw3DCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::GetSBfromHistoCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      TMTools::GraphToPolygonRight(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TMTools::GraphToPolygonRight((TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::GraphToPolygonTop((TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::GetMeanAndSigma((TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      TMTools::DrawCutQuality(
(TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      TMTools::DrawCutQuality(
(TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      TMTools::DrawCutQuality(
(TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::DrawCopCutQuality(
(TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::CreateExcitationFunction(
(TFile*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TMTools::CorrectEmptyTarget((TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMTools::CorrectEmptyTarget((TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMTools::AverageTOEnergyThetaData((TOEnergyThetaData*) G__int(libp->para[0]), (TOEnergyThetaData*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMTools::AddTOEnergyThetaData((TOEnergyThetaData*) G__int(libp->para[0]), (TOEnergyThetaData*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::PrintModelData((TGraphErrors*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMTools::PrintData((TGraphErrors*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TMTools::IsObjectType((TObject*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_901_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TMTools::CheckObject((const Char_t*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMObjectCollection */
static int G__G__MLIB_902_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMObjectCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMObjectCollection[n];
     } else {
       p = new((void*) gvp) TMObjectCollection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMObjectCollection;
     } else {
       p = new((void*) gvp) TMObjectCollection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMObjectCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMObjectCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMObjectCollection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetDataObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetEmptyTargetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetSignalObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetSignal1Object());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetSignal2Object());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetBackgroundObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetTotalObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetFitObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetArrayObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetArrayObject((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMObjectCollection*) G__getstructoffset())->GetArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMObjectCollection*) G__getstructoffset())->GetEBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMObjectCollection*) G__getstructoffset())->GetNTCBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMObjectCollection*) G__getstructoffset())->GetTCBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMObjectCollection*) G__getstructoffset())->GetNCTBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMObjectCollection*) G__getstructoffset())->GetNMMBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMObjectCollection*) G__getstructoffset())->GetCTBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TMObjectCollection*) G__getstructoffset())->GetMMBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddEnergyBin((TMEBin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->Add3DBin((TMEBin*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddDataObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddEmptyTargetObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddSignalObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddSignal1Object((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddSignal2Object((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddBackgroundObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddTotalObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddFitObject((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->AddArrayObject((Int_t) G__int(libp->para[0]), (TObject**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->GetHistoRange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TMObjectCollection*) G__getstructoffset())->Draw((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMObjectCollection*) G__getstructoffset())->Draw((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMObjectCollection*) G__getstructoffset())->Draw((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMObjectCollection*) G__getstructoffset())->Draw();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMObjectCollection*) G__getstructoffset())->DrawFitCollection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMObjectCollection*) G__getstructoffset())->DrawFitCollection((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMObjectCollection*) G__getstructoffset())->DrawFitCollection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMObjectCollection*) G__getstructoffset())->DrawPaperCollection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMObjectCollection*) G__getstructoffset())->DrawPaperCollection((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMObjectCollection*) G__getstructoffset())->DrawPaperCollection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TMObjectCollection*) G__getstructoffset())->DrawArrayCollection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TMObjectCollection*) G__getstructoffset())->DrawArrayCollection((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMObjectCollection*) G__getstructoffset())->DrawArrayCollection((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TMObjectCollection*) G__getstructoffset())->DrawArrayCollection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMObjectCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMObjectCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMObjectCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMObjectCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMObjectCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMObjectCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMObjectCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMObjectCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_902_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMObjectCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_902_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMObjectCollection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMObjectCollection(*(TMObjectCollection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMObjectCollection G__TTMObjectCollection;
static int G__G__MLIB_902_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMObjectCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMObjectCollection*) (soff+(sizeof(TMObjectCollection)*i)))->~G__TTMObjectCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMObjectCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMObjectCollection*) (soff))->~G__TTMObjectCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MLIB_902_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMObjectCollection* dest = (TMObjectCollection*) G__getstructoffset();
   *dest = *(TMObjectCollection*) libp->para[0].ref;
   const TMObjectCollection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMCuts */
static int G__G__MLIB_903_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      TMCuts::FitMMnew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TOEnergyThetaCut*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMCuts::FitMMnew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitMMnew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitMMnew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      TMCuts::FitMM(
(TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TMCuts::FitMM((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TMCuts::FitMM((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMCuts::FitMM((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitMM((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitMM((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCuts::SubtractIMfromMM((Int_t) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCuts::SubtractEmptyTarget((TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      TMCuts::FitCopNew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TOEnergyThetaCut*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMCuts::FitCopNew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitCopNew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitCopNew((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      TMCuts::FitCop(
(TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      TMCuts::FitCop((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TMCuts::FitCop((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TMCuts::FitCop((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitCop((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitCop((TMObjectCollection*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      TMCuts::FitDEvsE((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitDEvsE((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitDEvsE((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      TMCuts::FitDEvsTOFx((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TMCuts::FitDEvsTOFx((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TMCuts::FitDEvsTOFx((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_903_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCuts::FitDEvsTOFy((TH2F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMFit */
static int G__G__MLIB_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMFit[n];
     } else {
       p = new((void*) gvp) TMFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMFit;
     } else {
       p = new((void*) gvp) TMFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMFit((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TMFit((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetNumberCosThetaBins((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetNumberIterations((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInputDataFilename((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInputMCSignalFilename((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInputMCSignal1Filename((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInputMCSignal2Filename((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInputMCBackgroundFilenamePrefix((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetEfficiencyFilename((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->ApplyEfficiency((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetBackgroundConfig((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetBackground1Config((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TMFit*) G__getstructoffset())->SetBackground2Config((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TMFit*) G__getstructoffset())->SetBackground2Config((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetBackgroundContributionIndices((Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutHistoName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetExcitationFunctionHistoName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutAxisTitle((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetTwoSignals((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetRebin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetParameterFitMethod((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetParameterFitPolynomials((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetFitOption((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetGlobalFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetSignalFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetSignalFitHeight((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetGaussFitRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetGaussFitHeight((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetGaussFitMean((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetGaussFitSigma((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetParameterLimits((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutSigma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutFitRange((Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCutFitPolynomials(
(Char_t*) G__int(libp->para[0]), (Char_t*) G__int(libp->para[1])
, (Char_t*) G__int(libp->para[2]), (Char_t*) G__int(libp->para[3])
, (Char_t*) G__int(libp->para[4]), (Char_t*) G__int(libp->para[5])
, (Char_t*) G__int(libp->para[6]), (Char_t*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->ApplyIteration((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetNumPadX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetNumPadY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetNDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetAxisMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetAxisMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetTargetDensity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetBranchingRatio((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetInvariantMassValue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->IntegrateAll((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->Configure();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetBackgroundContributions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SetCollection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->FitParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->Fit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->Iterate((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->SaveAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->CleanGraph((TGraphErrors*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->DrawFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->DrawChiSquare();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->DrawParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->DrawCuts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->DrawCutRegions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_904_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_904_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMFit(*(TMFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMFit G__TTMFit;
static int G__G__MLIB_904_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMFit*) (soff+(sizeof(TMFit)*i)))->~G__TTMFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMFit*) (soff))->~G__TTMFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMPluto */
static int G__G__MLIB_999_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMPluto* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMPluto(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TMPluto(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMPluto));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetBeamDistribution((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetBeamEnergy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetNumberOfEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetNumberOfFiles((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetFileName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetOutputPath((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetBeamDiameter((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetTargetLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetPluto2Mkin((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetIS(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetFS(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->SetMembers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->InitHierarchy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->Generate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMPluto::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMPluto::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMPluto::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMPluto::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMPluto*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMPluto::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMPluto::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMPluto::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MLIB_999_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMPluto::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MLIB_999_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMPluto* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMPluto(*(TMPluto*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__MLIBLN_TMPluto));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMPluto G__TTMPluto;
static int G__G__MLIB_999_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMPluto*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMPluto*) (soff+(sizeof(TMPluto)*i)))->~G__TTMPluto();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMPluto*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMPluto*) (soff))->~G__TTMPluto();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMEBin */

/* TMCollection */

/* TMFitCollection */

/* TMCombinedFunctor */

/* TMCombinedFit */

/* TMEnergyThetaCut */

/* TMFunctor */

/* TMTools */

/* TMObjectCollection */

/* TMCuts */

/* TMFit */

/* TMPluto */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MLIB {
 public:
  G__Sizep2memfuncG__MLIB(): p(&G__Sizep2memfuncG__MLIB::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MLIB::*p)();
};

size_t G__get_sizep2memfuncG__MLIB()
{
  G__Sizep2memfuncG__MLIB a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MLIB() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMEBin))) {
     TMEBin *G__Lderived;
     G__Lderived=(TMEBin*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEBin),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEBin),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMCollection))) {
     TMCollection *G__Lderived;
     G__Lderived=(TMCollection*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCollection),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCollection),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection))) {
     TMFitCollection *G__Lderived;
     G__Lderived=(TMFitCollection*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor))) {
     TMCombinedFunctor *G__Lderived;
     G__Lderived=(TMCombinedFunctor*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit))) {
     TMCombinedFit *G__Lderived;
     G__Lderived=(TMCombinedFit*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut))) {
     TMEnergyThetaCut *G__Lderived;
     G__Lderived=(TMEnergyThetaCut*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection))) {
     TMObjectCollection *G__Lderived;
     G__Lderived=(TMObjectCollection*)0x1000;
     {
       TMCollection *G__Lpbase=(TMCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection),G__get_linked_tagnum(&G__G__MLIBLN_TMCollection),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMFit))) {
     TMFit *G__Lderived;
     G__Lderived=(TMFit*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFit),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFit),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MLIBLN_TMPluto))) {
     TMPluto *G__Lderived;
     G__Lderived=(TMPluto*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMPluto),G__get_linked_tagnum(&G__G__MLIBLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMPluto),G__get_linked_tagnum(&G__G__MLIBLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MLIB() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMEBin */
static void G__setup_memvarTMEBin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEBin));
   { TMEBin *p; p=(TMEBin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy=",0,"energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergyError=",0,"energy error");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nTaggCh=",0,"total number of tagger channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"iTaggCh=",0,"number of tagger channel");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTaggCh=",0,"number of tagger channels contributing to this bin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggChLo=",0,"lowest tagger channel contributing to this bin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaggChUp=",0,"highest tagger channel contributing to this bin");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCollection */
static void G__setup_memvarTMCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCollection));
   { TMCollection *p; p=(TMCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TList),-1,-1,2,"fCollection=",0,"list of objects in collection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMFitCollection */
static void G__setup_memvarTMFitCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection));
   { TMFitCollection *p; p=(TMFitCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBG=",0,"size of BG array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCTbins=",0,"# CTbins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEbins=",0,"# Ebins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRep=",0,"number of fit repetitions");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TH2F),-1,-1,2,"oDatIn=",0,"[fNCTbins] input data object");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TH2F),-1,-1,2,"oSigIn=",0,"[fNCTbins] input sig object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TH2F),-1,-1,2,"oBGIn=",0,"[fNCTbins][fNBG] input sig object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"oDat=",0,"[fNCTbins][fNEbins] data object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"oSig=",0,"[fNCTbins][fNEbins] sig object");
   G__memvar_setup((void*)0,85,4,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"oBG=",0,"[fNCTbins][fNEbins][fNBG] bg object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"oBGTot=",0,"[fNCTbins][fNEbins] total bg object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"oTot=",0,"[fNCTbins][fNEbins] total object");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"oFit=",0,"[fNCTbins][fNEbins] fit func");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnergy=",0,"[fNEbins] energy values");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCTlo=",0,"[fNCTbins] lower CT values");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCTup=",0,"[fNCTbins] upper CT values");
   G__memvar_setup((void*)0,68,3,0,-1,G__defined_typename("Double_t"),-1,2,"fPar=",0,"[fNCTbins][fNEbins][fNBG+1] fit parameters");
   G__memvar_setup((void*)0,68,3,0,-1,G__defined_typename("Double_t"),-1,2,"fParErr=",0,"[fNCTbins][fNEbins][fNBG+1] fit parameter Errors");
   G__memvar_setup((void*)0,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fChiSquare=",0,"[fNCTbins][fNEbins] fit chi2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChiMax=",0,"maximum chi2 value");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fFitCT=",0,"[fNEbins][fNBG+1] parameter fit");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fFitE=",0,"[fNCTbins][fNBG+1] parameter fit error");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutMeanE=",0,"[fNCTbins] mean fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutSigmaE=",0,"[fNCTbins] sigma fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutLoE=",0,"[fNCTbins] lower fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutUpE=",0,"[fNCTbins] upper fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutMeanCT=",0,"[fNEbins] mean fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutSigmaCT=",0,"[fNEbins] sigma fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutLoCT=",0,"[fNEbins] lower fit func for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,2,"fCutUpCT=",0,"[fNEbins] upper fit func for cut");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gParCT=",0,"[fNEbins][fNBG+1] fit parameter graphs for CT");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gParE=",0,"[fNCTbins][fNBG+1] fit parameter graphs for E");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gSBCT=",0,"[fNEbins][fNBG+1] sb graphs for CT");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gSBE=",0,"[fNCTbins][fNBG+1] sb graphs for E");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutMeanE=",0,"[fNCTbins] mean fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutSigmaE=",0,"[fNCTbins] sigma fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutLoE=",0,"[fNCTbins] lower fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutUpE=",0,"[fNCTbins] upper fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutMeanCT=",0,"[fNEbins] mean fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutSigmaCT=",0,"[fNEbins] sigma fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutLoCT=",0,"[fNEbins] lower fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gCutUpCT=",0,"[fNEbins] upper fit graphs for cut");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gChiSquareE=",0,"[fNCTbins]");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors),-1,-1,2,"gChiSquareCT=",0,"[fNEbins]");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"szPolMeanE=",0,"[fNCTbins] fit pol mean cut region");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"szPolSigmaE=",0,"[fNCTbins] fit pol sigma cut region");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"szPolLoE=",0,"[fNCTbins] fit pol lower cut region");
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"szPolUpE=",0,"[fNCTbins] fit pol upper cut region");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"szPolMeanCT=",0,"fit pol mean cut region");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"szPolSigmaCT=",0,"fit pol sigma cut region");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"szPolLoCT=",0,"fit pol lower cut region");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"szPolUpCT=",0,"fit pol upper cut region");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGmin=",0,"gauss fit min range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGmax=",0,"gauss fit max range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGMmin=",0,"gauss fit mean min ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGMmax=",0,"gauss fit mean max");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGMtol=",0,"gauss fit mean tol");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGSmin=",0,"gauss fit sigma min");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGSmax=",0,"gauss fit sigma max");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGHmin=",0,"gauss fit height min");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGHmax=",0,"gauss fit height max");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMin=",0,"fit start value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMax=",0,"fit end value");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLo=",0,"[fNCTbins] lower fit range");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUp=",0,"[fNCTbins] upper fit range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigma=",0,"cut sigma    ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaCut),-1,-1,2,"eCut=",0,"cut object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"eff=",0,"efficiency data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"sb=",0,"signal background ratio");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBR=",0,"branching ratio");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTD=",0,"target density");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIM=",0,"invariant mass dummy value");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"sExFunc=",0,"ex func histo name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kAll=",0,"ex func integration boolean");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TH2F),-1,-1,2,"hIM=",0,"[fNCTbins] ExFunc histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCombinedFunctor */
static void G__setup_memvarTMCombinedFunctor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor));
   { TMCombinedFunctor *p; p=(TMCombinedFunctor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1),-1,-1,2,"fA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1),-1,-1,2,"fB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCombinedFit */
static void G__setup_memvarTMCombinedFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit));
   { TMCombinedFit *p; p=(TMCombinedFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nCTBins=",0,"number of CT bins ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"IsW=",0,"W mode flag");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"outName=",0,"output filename");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dBG=",0,"background factor data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dSig=",0,"signal factor data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dfBG=",0,"smoothed background factor data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dfSig=",0,"smoothed signal factor data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dMM=",0,"missing mass result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dCop=",0,"coplanarity result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dIM=",0,"invariant mass result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dfMM=",0,"smoothed missing mass result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dfCop=",0,"smoothed coplanarity result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData),-1,-1,2,"dfIM=",0,"smoothed invariant mass result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hMMbg=",0,"MM bg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hMMsig=",0,"MM signal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hCOPbg=",0,"Cop bg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hCOPsig=",0,"Cop signal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hIMbg=",0,"IM bg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1D),-1,-1,2,"hIMsig=",0,"IM signal");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kFitCut=",0,"fit in cut range ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kFixSig=",0,"fix signal parameter");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kFixBG=",0,"fix bg parameter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitMMLo=",0,"MM fit minimum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitMMUp=",0,"MM fit maximum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitCopLo=",0,"Cop fit minimum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitCopUp=",0,"Cop fit maximum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitIMLo=",0,"IM fit minimum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFitIMUp=",0,"IM fit maximum range");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSiglo=",0,"signal par minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigup=",0,"signal par maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBGlo=",0,"bg par minimum   ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBGup=",0,"bg par maximum");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fdBG=",0,"BG factor fit func");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fdSig=",0,"Sig factor fit func");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdSiglo=",0,"dilfac sig fitting min");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdSigup=",0,"dilfac sig fitting max");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdBGlo=",0,"dilfac fitting min");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdBGup=",0,"dilfac fitting max");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"rebMM=",0,"MM rebin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"rebCop=",0,"Cop rebin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"rebIM=",0,"IM rebin");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fRefCS=",0,"reference cross section");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fTot=",0,"total data filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fBG=",0,"total bg filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fSig=",0,"total sig filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fEffTot=",0,"total eff filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fEffBG=",0,"bg eff filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fEffSig=",0,"sig eff filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fFlux=",0,"total flux name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fEff=",0,"total flux name");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotFluxScale=",0,"total flux scale factor");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBGFluxScale=",0,"background flux scale factor");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigFluxScale=",0,"signal flux scale factor");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotNorm=",0,"normalization factor");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBGNorm=",0,"background normalization factor");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigNorm=",0,"signal normalization factor");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"MMname=",0,"MM histo name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"Copname=",0,"Cop histo name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"IMname=",0,"IM histo name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fMMcut=",0,"MM cut filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fCopcut=",0,"Cop cut filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fIMcut=",0,"IM cut filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fMM=",0,"MM cut name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fCop=",0,"Cop cut name");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fIM=",0,"IM cut name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kMMcutW=",0,"MM cut W flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kCopcutW=",0,"Cop cut W flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kIMcutW=",0,"IM cut W flag");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigMM=",0,"MM sigma in cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigCop=",0,"Cop sigma in cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigIM=",0,"IM sigma in cut");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigMMuse=",0,"MM sigma applied");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigCopuse=",0,"Cop sigma applied");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sigIMuse=",0,"IM sigma applied");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"step size for fitter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMEnergyThetaCut */
static void G__setup_memvarTMEnergyThetaCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut));
   { TMEnergyThetaCut *p; p=(TMEnergyThetaCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNCTBin=",0,"number of cos(theta) bins");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,4,"fCutLowerFunc=",0,"[fNCTBin] cut lower function");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TF1),-1,-1,4,"fCutUpperFunc=",0,"[fNCTBin] cut upper function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMFunctor */
static void G__setup_memvarTMFunctor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFunctor));
   {
   G__memvar_setup((void*)(&TMFunctor::fIsFunctorInit),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsFunctorInit=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::fReject),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fReject=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::fPar),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fPar=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::fRejLo),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fRejLo=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::fRejUp),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fRejUp=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::parOne),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"parOne=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::parTwo),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"parTwo=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::fNumber),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNumber=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::hFit),85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TH1),-1,-1,1,"hFit=",0,(char*)NULL);
   G__memvar_setup((void*)(&TMFunctor::hFit2D),85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TH2),-1,-1,1,"hFit2D=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMTools */
static void G__setup_memvarTMTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMTools));
   {
   }
   G__tag_memvar_reset();
}


   /* TMObjectCollection */
static void G__setup_memvarTMObjectCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection));
   { TMObjectCollection *p; p=(TMObjectCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nHisto=",0,"number of histos");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strDat=",0,"data object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strEmpty=",0,"empty target object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strSig=",0,"sig object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strSig1=",0,"sig1 object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strSig2=",0,"sig2 object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strBG=",0,"bg object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strTot=",0,"total object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strArr=",0,"array object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strBin=",0,"Energy Bin");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strFit=",0,"fit func");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nArr=",0,"size of array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nCT=",0,"# CTbins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"iCT=",0,"CTbin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nMM=",0,"# MMbins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"iMM=",0,"MMbin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"yMin=",0,"ymin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"yMax=",0,"ymax");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMCuts */
static void G__setup_memvarTMCuts(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCuts));
   {
   }
   G__tag_memvar_reset();
}


   /* TMFit */
static void G__setup_memvarTMFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFit));
   { TMFit *p; p=(TMFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection),-1,-1,2,"fc=",0,"fit object collection");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBG=",0,"size of BG array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCTbins=",0,"# CTbins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEbins=",0,"# Ebins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRep=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"hNameBGall=",0,"[fNBGall] all MC BG index array");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIBGall=",0,"[fNBGall] all MC BG index array");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIBG=",0,"[fNBG] MC BG index array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBGall=",0,"number of all MC BG contributions");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRebin=",0,"histogram rebin value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFrac=",0,"fraction of 2nd MC signal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargDens=",0,"target density");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBrRatio=",0,"branching ratio");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIM=",0,"invariant mass value");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kTwoSig=",0,"boolean for two MC signal fit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kFitE=",0,"boolean for E-parameter fit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kExFunc=",0,"boolean for ex func calculation");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kIntAll=",0,"boolean for MC signal integration");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"kEff=",0,"boolean for efficiency application");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cData=",0,"data filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cMCsig=",0,"MC signal filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cMCsig1=",0,"MC signal1 filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cMCsig2=",0,"MC signal2 filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cMCbg=",0,"MC background filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cEff=",0,"efficiency filename");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cBGconfig=",0,"background config file");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cBGconfig1=",0,"background1 config file");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cBGconfig2=",0,"background2 config file");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cBGindices=",0,"indices of background contributions to use");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cCutHisto=",0,"name of histograms to use for fit");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cExFunc=",0,"name of ex func histo for cross sections");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cAxis=",0,"axis title");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cParFitMeth=",0,"parameter fit method");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cParFitPolCT=",0,"polynomial for CT parameter fit");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cParFitPolE=",0,"polynomial for E parameter fit");
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"cFitOpt=",0,"fit option");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGloMin=",0,"global fit range minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGloMax=",0,"global fit range maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigMin=",0,"signal fit range minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigMax=",0,"signal fit range maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigHeightMin=",0,"signal fit height minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigHeightMax=",0,"signal fit height maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fParMin=",0,"parameter limit minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fParMax=",0,"parameter limit maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauMin=",0,"gauss fit range minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauMax=",0,"gauss fit range maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauHeightMin=",0,"gauss fit height minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauHeightMax=",0,"gauss fit height maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauMeanMin=",0,"gauss fit mean minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauMeanMax=",0,"gauss fit mean maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauMeanTol=",0,"gauss fit mean tolerance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauSigmaMin=",0,"gauss fit sigma minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGauSigmaMax=",0,"gauss fit sigma maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigma=",0,"cut sigma");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMin=",0,"cut range minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMax=",0,"cut range maximum");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fFitMin=",0,"cut fit range minimum");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fFitMax=",0,"cut fit range maximum");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParEPolMean=",0,"E - mean parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParEPolSigma=",0,"E - sigma parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParEPolLo=",0,"E - lo parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParEPolUp=",0,"E - up parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParCTPolMean=",0,"CT - mean parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParCTPolSigma=",0,"CT - sigma parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParCTPolLo=",0,"CT - lo parameter fit polynomial");
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"cParCTPolUp=",0,"CT - up parameter fit polynomial");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nIt=",0,"iteration to be applied");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nPadX=",0,"number of pads in x dir");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nPadY=",0,"number of pads in y dir");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ndc=",0,"NDC axis ticks");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"xMin=",0,"axis range minimum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"xMax=",0,"axis range maximum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMPluto */
static void G__setup_memvarTMPluto(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMPluto));
   { TMPluto *p; p=(TMPluto*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"szReac=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"szDis=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"energyMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"energyMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nFiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,G__defined_typename("Char_t"),-1,2,"fLoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDiam=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"IsMkin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strPart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strSpec=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"iIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"nPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"iHierarchy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strDec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__MLIBLN_TString),-1,-1,2,"strHierarchy=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"iOrigGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"iOrigPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__MLIBLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MLIB() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMEBin(void) {
   /* TMEBin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEBin));
   G__memfunc_setup("TMEBin",511,G__G__MLIB_239_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMEBin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMEBin",511,G__G__MLIB_239_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMEBin), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nTaggCh i - 'Int_t' 0 - iTaggCh "
"i - 'Int_t' 0 - TClo i - 'Int_t' 0 - TCup "
"d - 'Double_t' 0 - TCe d - 'Double_t' 0 - TCee", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__MLIB_239_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__MLIB_239_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyError",1428,G__G__MLIB_239_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTotalTaggerChannels",2296,G__G__MLIB_239_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTaggerChannel",1665,G__G__MLIB_239_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTaggerChannels",1780,G__G__MLIB_239_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTaggerChannelLo",1774,G__G__MLIB_239_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTaggerChannelUp",1784,G__G__MLIB_239_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_239_0_11, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMEBin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_239_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEBin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_239_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMEBin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_239_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMEBin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_239_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_239_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEBin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_239_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMEBin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_239_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEBin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_239_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMEBin::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMEBin", 511, G__G__MLIB_239_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMEBin), -1, 0, 1, 1, 1, 0, "u 'TMEBin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMEBin", 637, G__G__MLIB_239_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MLIB_239_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__MLIBLN_TMEBin), -1, 1, 1, 1, 1, 0, "u 'TMEBin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCollection(void) {
   /* TMCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCollection));
   G__memfunc_setup("TMCollection",1197,G__G__MLIB_298_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMCollection), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' szName C - 'Char_t' 10 '\"\"' szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollection",1324,G__G__MLIB_298_0_2, 85, G__get_linked_tagnum(&G__G__MLIBLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddObject",864,G__G__MLIB_298_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ListObjects",1126,G__G__MLIB_298_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__G__MLIB_298_0_5, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - szName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsObjectType",1205,G__G__MLIB_298_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTF1",491,G__G__MLIB_298_0_7, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - szName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1",493,G__G__MLIB_298_0_8, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - szName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_298_0_9, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_298_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_298_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_298_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_298_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_298_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_298_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_298_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_298_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCollection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCollection", 1197, G__G__MLIB_298_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMCollection), -1, 0, 1, 1, 1, 0, "u 'TMCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCollection", 1323, G__G__MLIB_298_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MLIB_298_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__MLIBLN_TMCollection), -1, 1, 1, 1, 1, 0, "u 'TMCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMFitCollection(void) {
   /* TMFitCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection));
   G__memfunc_setup("TMFitCollection",1488,G__G__MLIB_757_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMFitCollection",1488,G__G__MLIB_757_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitObjects",1118,G__G__MLIB_757_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDimensions",1349,G__G__MLIB_757_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b i - 'Int_t' 0 - r "
"i - 'Int_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumCosThetaBins",1783,G__G__MLIB_757_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumEnergyBins",1606,G__G__MLIB_757_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBackground",1616,G__G__MLIB_757_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumIterations",1650,G__G__MLIB_757_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussianOpt",1434,G__G__MLIB_757_0_9, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - f d - 'Double_t' 0 - fmin "
"d - 'Double_t' 0 - fmax d - 'Double_t' 0 - fmmin "
"d - 'Double_t' 0 - fmmax d - 'Double_t' 0 - fmtol "
"d - 'Double_t' 0 - fsmin d - 'Double_t' 0 - fsmax "
"d - 'Double_t' 0 - fhmin d - 'Double_t' 0 - fhmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInputDataObject",1770,G__G__MLIB_757_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TH2F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInputSignalObject",1998,G__G__MLIB_757_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TH2F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddInputBackgroundObject",2416,G__G__MLIB_757_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b "
"U 'TH2F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataObject",1242,G__G__MLIB_757_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSignalObject",1470,G__G__MLIB_757_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBackgroundObject",1888,G__G__MLIB_757_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTotalBackgroundObject",2404,G__G__MLIB_757_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFitObject",1155,G__G__MLIB_757_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalHistos",1450,G__G__MLIB_757_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ct i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolynomialParameters",2404,G__G__MLIB_757_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TF1' - 0 - f C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaximumAndPositionInRange",2826,G__G__MLIB_757_0_20, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TH1D' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__G__MLIB_757_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerCosTheta",1616,G__G__MLIB_757_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperCosTheta",1619,G__G__MLIB_757_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitParameter",1520,G__G__MLIB_757_0_24, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitParError",1404,G__G__MLIB_757_0_25, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSquare",1201,G__G__MLIB_757_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxChiSquare",1495,G__G__MLIB_757_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCTParameterFit",1671,G__G__MLIB_757_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b "
"U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEParameterFit",1589,G__G__MLIB_757_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b "
"U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCTParameterGraph",1878,G__G__MLIB_757_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b "
"U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEParameterGraph",1796,G__G__MLIB_757_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b "
"U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSBCTGraph",1098,G__G__MLIB_757_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b "
"U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSBEGraph",1016,G__G__MLIB_757_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b "
"U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanCutGraphE",1552,G__G__MLIB_757_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaCutGraphE",1664,G__G__MLIB_757_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerCutGraphE",1688,G__G__MLIB_757_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperCutGraphE",1691,G__G__MLIB_757_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanCutGraphCT",1634,G__G__MLIB_757_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaCutGraphCT",1746,G__G__MLIB_757_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerCutGraphCT",1770,G__G__MLIB_757_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperCutGraphCT",1773,G__G__MLIB_757_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSquareGraphE",1768,G__G__MLIB_757_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiSquareGraphCT",1850,G__G__MLIB_757_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanCutFuncE",1450,G__G__MLIB_757_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaCutFuncE",1562,G__G__MLIB_757_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerCutFuncE",1586,G__G__MLIB_757_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperCutFuncE",1589,G__G__MLIB_757_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeanCutFuncCT",1532,G__G__MLIB_757_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSigmaCutFuncCT",1644,G__G__MLIB_757_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerCutFuncCT",1668,G__G__MLIB_757_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperCutFuncCT",1671,G__G__MLIB_757_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitLowerBoundary",1948,G__G__MLIB_757_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - v C - 'Char_t' 0 - lo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitUpperBoundary",1951,G__G__MLIB_757_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - v C - 'Char_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolMeanE",1344,G__G__MLIB_757_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolSigmaE",1456,G__G__MLIB_757_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolLoE",1146,G__G__MLIB_757_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolUpE",1156,G__G__MLIB_757_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolMeanCT",1426,G__G__MLIB_757_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolSigmaCT",1538,G__G__MLIB_757_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolLoCT",1228,G__G__MLIB_757_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitPolUpCT",1238,G__G__MLIB_757_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExFuncCalcOpt",1563,G__G__MLIB_757_0_62, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TOEnergyThetaData' - 0 - e d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - d d - 'Double_t' 0 - m "
"C - 'Char_t' 10 - s g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputDataObject",1793,G__G__MLIB_757_0_63, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputSignalObject",2021,G__G__MLIB_757_0_64, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInputBackgroundObject",2439,G__G__MLIB_757_0_65, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataObject",1265,G__G__MLIB_757_0_66, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignalObject",1493,G__G__MLIB_757_0_67, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackgroundObject",1911,G__G__MLIB_757_0_68, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1D), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalBackgroundObject",2427,G__G__MLIB_757_0_69, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalObject",1403,G__G__MLIB_757_0_70, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1D), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitObject",1178,G__G__MLIB_757_0_71, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSBObject",1036,G__G__MLIB_757_0_72, 85, G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__G__MLIB_757_0_73, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerCosTheta",1604,G__G__MLIB_757_0_74, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperCosTheta",1607,G__G__MLIB_757_0_75, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyBin",1187,G__G__MLIB_757_0_76, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThetaBin",1364,G__G__MLIB_757_0_77, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitParameter",1508,G__G__MLIB_757_0_78, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitParError",1392,G__G__MLIB_757_0_79, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSquare",1189,G__G__MLIB_757_0_80, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCTParameterFit",1659,G__G__MLIB_757_0_81, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEParameterFit",1577,G__G__MLIB_757_0_82, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanCutFuncE",1438,G__G__MLIB_757_0_83, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaCutFuncE",1550,G__G__MLIB_757_0_84, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerCutFuncE",1574,G__G__MLIB_757_0_85, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperCutFuncE",1577,G__G__MLIB_757_0_86, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanCutFuncCT",1520,G__G__MLIB_757_0_87, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaCutFuncCT",1632,G__G__MLIB_757_0_88, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerCutFuncCT",1656,G__G__MLIB_757_0_89, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperCutFuncCT",1659,G__G__MLIB_757_0_90, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCTParameterGraph",1866,G__G__MLIB_757_0_91, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEParameterGraph",1784,G__G__MLIB_757_0_92, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSBCTGraph",1086,G__G__MLIB_757_0_93, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSBEGraph",1004,G__G__MLIB_757_0_94, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanCutGraphE",1540,G__G__MLIB_757_0_95, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaCutGraphE",1652,G__G__MLIB_757_0_96, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerCutGraphE",1676,G__G__MLIB_757_0_97, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperCutGraphE",1679,G__G__MLIB_757_0_98, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeanCutGraphCT",1622,G__G__MLIB_757_0_99, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaCutGraphCT",1734,G__G__MLIB_757_0_100, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerCutGraphCT",1758,G__G__MLIB_757_0_101, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperCutGraphCT",1761,G__G__MLIB_757_0_102, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSquareGraphE",1756,G__G__MLIB_757_0_103, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSquareGraphCT",1838,G__G__MLIB_757_0_104, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutsFromGaussian",1934,G__G__MLIB_757_0_105, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanGraphE",1050,G__G__MLIB_757_0_106, 85, G__get_linked_tagnum(&G__G__MLIBLN_TGraphErrors), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanGraphCT",1132,G__G__MLIB_757_0_107, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateExcitationFunctions",2911,G__G__MLIB_757_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - kEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecalculateExcitationFunctions",3126,G__G__MLIB_757_0_109, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2), -1, 2, 6, 1, 1, 0, 
"U 'TOEnergyThetaData' - 0 - e C - 'Char_t' 10 - s "
"d - 'Double_t' 0 - fM d - 'Double_t' 0 - fB "
"d - 'Double_t' 0 - fT g - 'Bool_t' 0 - kA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecalculateExcFuncErrors",2446,G__G__MLIB_757_0_110, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2), -1, 2, 6, 1, 1, 0, 
"U 'TOEnergyThetaData' - 0 - e C - 'Char_t' 10 - s "
"d - 'Double_t' 0 - fM d - 'Double_t' 0 - fB "
"d - 'Double_t' 0 - fT g - 'Bool_t' 0 - kA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutObject",1187,G__G__MLIB_757_0_111, 85, G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitLowerBoundary",1936,G__G__MLIB_757_0_112, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitUpperBoundary",1939,G__G__MLIB_757_0_113, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitPolMeanE",1332,G__G__MLIB_757_0_114, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitPolSigmaE",1444,G__G__MLIB_757_0_115, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitPolLoE",1134,G__G__MLIB_757_0_116, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitPolUpE",1144,G__G__MLIB_757_0_117, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExcitationFunction",2174,G__G__MLIB_757_0_118, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ct", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__G__MLIB_757_0_119, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - ct i - 'Int_t' 0 - e "
"d - 'Double_t' 0 '9999.' rLo d - 'Double_t' 0 '9999.' rUp "
"g - 'Bool_t' 0 'kTRUE' kTit g - 'Bool_t' 0 'kFALSE' kPrint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawChiSquareE",1368,G__G__MLIB_757_0_120, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawChiSquareCT",1450,G__G__MLIB_757_0_121, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawInputE",995,G__G__MLIB_757_0_122, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - c C - 'Char_t' 10 - s "
"C - 'Char_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawInputCT",1077,G__G__MLIB_757_0_123, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - e C - 'Char_t' 10 - s "
"C - 'Char_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCuts",813,G__G__MLIB_757_0_124, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - c C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawParametersCT",1593,G__G__MLIB_757_0_125, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - e i - 'Int_t' 0 - bg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawParametersE",1511,G__G__MLIB_757_0_126, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ct i - 'Int_t' 0 - bg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_757_0_127, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMFitCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_757_0_128, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFitCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_757_0_129, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMFitCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_757_0_130, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMFitCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_757_0_134, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_757_0_135, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFitCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_757_0_136, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMFitCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_757_0_137, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFitCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_757_0_138, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMFitCollection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMFitCollection", 1488, G__G__MLIB_757_0_139, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMFitCollection), -1, 0, 1, 1, 1, 0, "u 'TMFitCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMFitCollection", 1614, G__G__MLIB_757_0_140, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCombinedFunctor(void) {
   /* TMCombinedFunctor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor));
   G__memfunc_setup("TMCombinedFunctor",1699,G__G__MLIB_758_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCombinedFunctor",1699,G__G__MLIB_758_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor), -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - hA U 'TH1' - 0 - hB "
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyFitFunc",885,G__G__MLIB_758_0_3, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_758_0_4, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCombinedFunctor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_758_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFunctor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_758_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCombinedFunctor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_758_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCombinedFunctor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_758_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_758_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFunctor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_758_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCombinedFunctor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_758_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFunctor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_758_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCombinedFunctor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCombinedFunctor", 1699, G__G__MLIB_758_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor), -1, 0, 1, 1, 1, 0, "u 'TMCombinedFunctor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCombinedFunctor", 1825, G__G__MLIB_758_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MLIB_758_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFunctor), -1, 1, 1, 1, 1, 0, "u 'TMCombinedFunctor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCombinedFit(void) {
   /* TMCombinedFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit));
   G__memfunc_setup("TMCombinedFit",1253,G__G__MLIB_895_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCombinedFit",1253,G__G__MLIB_895_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsW",575,G__G__MLIB_895_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMMcut",786,G__G__MLIB_895_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - f C - 'Char_t' 10 - c "
"g - 'Bool_t' 0 'kFALSE' k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopcut",922,G__G__MLIB_895_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - f C - 'Char_t' 10 - c "
"g - 'Bool_t' 0 'kFALSE' k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIMcut",782,G__G__MLIB_895_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - f C - 'Char_t' 10 - c "
"g - 'Bool_t' 0 'kFALSE' k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMMsigma",983,G__G__MLIB_895_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - is d - 'Double_t' 0 - use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopsigma",1119,G__G__MLIB_895_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - is d - 'Double_t' 0 - use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIMsigma",979,G__G__MLIB_895_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - is d - 'Double_t' 0 - use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitCutRange",1384,G__G__MLIB_895_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixSignal",901,G__G__MLIB_895_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixBackground",1319,G__G__MLIB_895_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMMFitRange",1238,G__G__MLIB_895_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopFitRange",1374,G__G__MLIB_895_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIMFitRange",1234,G__G__MLIB_895_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepSize",1123,G__G__MLIB_895_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignalParRange",1690,G__G__MLIB_895_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundParRange",2108,G__G__MLIB_895_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDilSignalParRange",1971,G__G__MLIB_895_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDilBackgroundParRange",2389,G__G__MLIB_895_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDilFitFuncs",1383,G__G__MLIB_895_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - bg C - 'Char_t' 10 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RebinMMHisto",1169,G__G__MLIB_895_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RebinCopHisto",1305,G__G__MLIB_895_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RebinIMHisto",1165,G__G__MLIB_895_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceCrossSection",2458,G__G__MLIB_895_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalDataFile",1578,G__G__MLIB_895_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundDataFile",2086,G__G__MLIB_895_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignalDataFile",1668,G__G__MLIB_895_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalEffFile",1473,G__G__MLIB_895_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundEffFile",1981,G__G__MLIB_895_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignalEffFile",1563,G__G__MLIB_895_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFluxName",1100,G__G__MLIB_895_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEffName",958,G__G__MLIB_895_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleTotalFlux",1419,G__G__MLIB_895_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleBackgroundFlux",1927,G__G__MLIB_895_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleSignalFlux",1509,G__G__MLIB_895_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleTotalHisto",1523,G__G__MLIB_895_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleBackgroundHisto",2031,G__G__MLIB_895_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleSignalHisto",1613,G__G__MLIB_895_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMMname",871,G__G__MLIB_895_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopname",1007,G__G__MLIB_895_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIMname",867,G__G__MLIB_895_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumCosThetaBin",1680,G__G__MLIB_895_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DivideFlux",1012,G__G__MLIB_895_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - h U 'TH1' - 0 - hFlux", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DivideEfficiency",1610,G__G__MLIB_895_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 2 - h U 'TOEnergyThetaData' - 0 - eff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MLIB_895_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinMaxRange",1367,G__G__MLIB_895_0_47, 68, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hA U 'TH1' - 0 - hB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_895_0_48, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCombinedFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_895_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_895_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCombinedFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_895_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCombinedFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_895_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_895_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_895_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCombinedFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_895_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCombinedFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_895_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCombinedFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCombinedFit", 1253, G__G__MLIB_895_0_60, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMCombinedFit), -1, 0, 1, 1, 1, 0, "u 'TMCombinedFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCombinedFit", 1379, G__G__MLIB_895_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMEnergyThetaCut(void) {
   /* TMEnergyThetaCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut));
   G__memfunc_setup("TMEnergyThetaCut",1581,G__G__MLIB_899_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMEnergyThetaCut",1581,G__G__MLIB_899_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nCTBins C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLowerFunc",1217,G__G__MLIB_899_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ctBin U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpperFunc",1220,G__G__MLIB_899_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ctBin U 'TF1' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerFunction",1647,G__G__MLIB_899_0_5, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ctBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperFunction",1650,G__G__MLIB_899_0_6, 85, G__get_linked_tagnum(&G__G__MLIBLN_TF1), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ctBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInsideS",875,G__G__MLIB_899_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - energy d - 'Double_t' 0 - cosTheta "
"d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_899_0_8, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMEnergyThetaCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_899_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEnergyThetaCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_899_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMEnergyThetaCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_899_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMEnergyThetaCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_899_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_899_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEnergyThetaCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_899_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMEnergyThetaCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_899_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMEnergyThetaCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_899_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMEnergyThetaCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMEnergyThetaCut", 1581, G__G__MLIB_899_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut), -1, 0, 1, 1, 1, 0, "u 'TMEnergyThetaCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMEnergyThetaCut", 1707, G__G__MLIB_899_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MLIB_899_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__MLIBLN_TMEnergyThetaCut), -1, 1, 1, 1, 1, 0, "u 'TMEnergyThetaCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMFunctor(void) {
   /* TMFunctor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFunctor));
   G__memfunc_setup("InitFunctor",1141,G__G__MLIB_900_0_1, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - n U 'TH1' - 2 - h "
"g - 'Bool_t' 0 'kFALSE' isReject d - 'Double_t' 0 '0.' fLo "
"d - 'Double_t' 0 '0.' fUp", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, TH1**, Bool_t, Double_t, Double_t))(&TMFunctor::InitFunctor) ), 0);
   G__memfunc_setup("InitFunctor",1141,G__G__MLIB_900_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - n U 'TH2' - 2 - h "
"g - 'Bool_t' 0 'kFALSE' isReject d - 'Double_t' 0 '0.' fLo "
"d - 'Double_t' 0 '0.' fUp", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, TH2**, Bool_t, Double_t, Double_t))(&TMFunctor::InitFunctor) ), 0);
   G__memfunc_setup("SetParameters",1344,G__G__MLIB_900_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - p", (char*)NULL, (void*) G__func2void( (void (*)(Double_t*))(&TMFunctor::SetParameters) ), 0);
   G__memfunc_setup("MyFitFuncMC",1029,G__G__MLIB_900_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TMFunctor::MyFitFuncMC) ), 0);
   G__memfunc_setup("MyFitFuncMC2D",1147,G__G__MLIB_900_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TMFunctor::MyFitFuncMC2D) ), 0);
   G__memfunc_setup("FitTH1Pol1",844,G__G__MLIB_900_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TMFunctor::FitTH1Pol1) ), 0);
   G__memfunc_setup("Pol1Exc",636,G__G__MLIB_900_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TMFunctor::Pol1Exc) ), 0);
   G__memfunc_setup("MyFitFuncEmpty",1412,G__G__MLIB_900_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TMFunctor::MyFitFuncEmpty) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMTools(void) {
   /* TMTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMTools));
   G__memfunc_setup("Get1DHisto",924,G__G__MLIB_901_0_1, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH1F), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - strFile u 'TString' - 0 - strOldName "
"u 'TString' - 0 - strNewName", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, TString, TString))(&TMTools::Get1DHisto) ), 0);
   G__memfunc_setup("Get2DHisto",925,G__G__MLIB_901_0_2, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - strFile u 'TString' - 0 - strOldName "
"u 'TString' - 0 - strNewName", (char*)NULL, (void*) G__func2void( (TH2F* (*)(TString, TString, TString))(&TMTools::Get2DHisto) ), 0);
   G__memfunc_setup("Get2DCollectionSize",1853,G__G__MLIB_901_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szColl "
"i - 'Int_t' 1 - ia i - 'Int_t' 1 - ib", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Int_t&, Int_t&))(&TMTools::Get2DCollectionSize) ), 0);
   G__memfunc_setup("GetFirstNotEmptyBin",1921,G__G__MLIB_901_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*))(&TMTools::GetFirstNotEmptyBin) ), 0);
   G__memfunc_setup("GetLastNotEmptyBin",1805,G__G__MLIB_901_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*))(&TMTools::GetLastNotEmptyBin) ), 0);
   G__memfunc_setup("Draw2DCollection",1552,G__G__MLIB_901_0_6, 121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szColl "
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib "
"i - 'Int_t' 0 - iNPadX i - 'Int_t' 0 - iNPadY "
"i - 'Int_t' 0 - iNDC g - 'Bool_t' 0 'kTRUE' kFit "
"i - 'Int_t' 0 '1' iRebin", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Int_t, Int_t, Int_t, Int_t, Int_t, Bool_t, Int_t))(&TMTools::Draw2DCollection) ), 0);
   G__memfunc_setup("Draw2DCollection",1552,G__G__MLIB_901_0_7, 121, -1, -1, 0, 10, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szColl "
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib "
"i - 'Int_t' 0 - ic i - 'Int_t' 0 - iNPadX "
"i - 'Int_t' 0 - iNPadY i - 'Int_t' 0 - iNDC "
"g - 'Bool_t' 0 'kTRUE' kFit i - 'Int_t' 0 '1' iRebin", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Bool_t, Int_t))(&TMTools::Draw2DCollection) ), 0);
   G__memfunc_setup("Draw3DCollection",1553,G__G__MLIB_901_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - szFile C - 'Char_t' 10 - szColl "
"i - 'Int_t' 0 - iNPadX i - 'Int_t' 0 - iNPadY "
"i - 'Int_t' 0 - iNDC", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*, const Char_t*, Int_t, Int_t, Int_t))(&TMTools::Draw3DCollection) ), 0);
   G__memfunc_setup("GetSBfromHistoCollection",2428,G__G__MLIB_901_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - szFile C - 'Char_t' 10 - szMM "
"C - 'Char_t' 10 - szColl", (char*)NULL, (void*) G__func2void( (void (*)(const Char_t*, const Char_t*, const Char_t*))(&TMTools::GetSBfromHistoCollection) ), 0);
   G__memfunc_setup("GraphToPolygonRight",1947,G__G__MLIB_901_0_10, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szGraph "
"d - 'Double_t' 0 - fLeft d - 'Double_t' 0 - fBottom "
"d - 'Double_t' 0 - fRight d - 'Double_t' 0 - fTop "
"d - 'Double_t' 0 '0.' fSup", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Double_t, Double_t, Double_t, Double_t, Double_t))(&TMTools::GraphToPolygonRight) ), 0);
   G__memfunc_setup("GraphToPolygonTop",1744,G__G__MLIB_901_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szGraph "
"d - 'Double_t' 0 - fLeft d - 'Double_t' 0 - fBottom "
"d - 'Double_t' 0 - fRight", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Double_t, Double_t, Double_t))(&TMTools::GraphToPolygonTop) ), 0);
   G__memfunc_setup("GetMeanAndSigma",1445,G__G__MLIB_901_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szFunc "
"i - 'Int_t' 0 - ia i - 'Int_t' 0 - ib", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, Int_t, Int_t))(&TMTools::GetMeanAndSigma) ), 0);
   G__memfunc_setup("DrawCutQuality",1443,G__G__MLIB_901_0_13, 121, -1, -1, 0, 10, 1, 1, 0, 
"U 'TFile' - 0 - f U 'TFile' - 0 - fData "
"C - 'Char_t' 10 - szHisto i - 'Int_t' 0 - iCT "
"d - 'Double_t' 0 - fSigma C - 'Char_t' 10 - szPol "
"d - 'Double_t' 0 - fLoLeft d - 'Double_t' 0 - fLoRight "
"d - 'Double_t' 0 '0.' fUpLeft d - 'Double_t' 0 '0.' fUpRight", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, TFile*, const Char_t*, Int_t, Double_t, const Char_t*, Double_t, Double_t, Double_t, Double_t))(&TMTools::DrawCutQuality) ), 0);
   G__memfunc_setup("DrawCopCutQuality",1733,G__G__MLIB_901_0_14, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TFile' - 0 - f U 'TFile' - 0 - fData "
"C - 'Char_t' 10 - szHisto i - 'Int_t' 0 - iCT "
"d - 'Double_t' 0 - fSigma C - 'Char_t' 10 - szPol "
"d - 'Double_t' 0 - fLeft d - 'Double_t' 0 - fRight", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, TFile*, const Char_t*, Int_t, Double_t, const Char_t*, Double_t, Double_t))(&TMTools::DrawCopCutQuality) ), 0);
   G__memfunc_setup("CreateExcitationFunction",2482,G__G__MLIB_901_0_15, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TFile' - 0 - f C - 'Char_t' 10 - szObj "
"U 'TFile' - 0 - fEff i - 'Int_t' 0 - nCTbin "
"i - 'Int_t' 0 - nTCbin C - 'Char_t' 10 - szHisto "
"d - 'Double_t' 0 - nBR d - 'Double_t' 0 - nTD", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, const Char_t*, TFile*, Int_t, Int_t, const Char_t*, Double_t, Double_t))(&TMTools::CreateExcitationFunction) ), 0);
   G__memfunc_setup("CorrectEmptyTarget",1864,G__G__MLIB_901_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - fCS U 'TFile' - 0 - fCSempty "
"d - 'Double_t' 0 '1.' scale", (char*)NULL, (void*) G__func2void( (void (*)(TFile*, TFile*, Double_t))(&TMTools::CorrectEmptyTarget) ), 0);
   G__memfunc_setup("AverageTOEnergyThetaData",2360,G__G__MLIB_901_0_17, 85, G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData), -1, 0, 2, 1, 1, 0, 
"U 'TOEnergyThetaData' - 0 - e1 U 'TOEnergyThetaData' - 0 - e2", (char*)NULL, (void*) G__func2void( (TOEnergyThetaData* (*)(TOEnergyThetaData*, TOEnergyThetaData*))(&TMTools::AverageTOEnergyThetaData) ), 0);
   G__memfunc_setup("AddTOEnergyThetaData",1926,G__G__MLIB_901_0_18, 85, G__get_linked_tagnum(&G__G__MLIBLN_TOEnergyThetaData), -1, 0, 2, 1, 1, 0, 
"U 'TOEnergyThetaData' - 0 - e1 U 'TOEnergyThetaData' - 0 - e2", (char*)NULL, (void*) G__func2void( (TOEnergyThetaData* (*)(TOEnergyThetaData*, TOEnergyThetaData*))(&TMTools::AddTOEnergyThetaData) ), 0);
   G__memfunc_setup("PrintModelData",1400,G__G__MLIB_901_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphErrors' - 0 - g C - 'Char_t' 10 - fModel", (char*)NULL, (void*) G__func2void( (void (*)(TGraphErrors*, const Char_t*))(&TMTools::PrintModelData) ), 0);
   G__memfunc_setup("PrintData",903,G__G__MLIB_901_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphErrors' - 0 - g C - 'Char_t' 10 - fModel", (char*)NULL, (void*) G__func2void( (void (*)(TGraphErrors*, const Char_t*))(&TMTools::PrintData) ), 0);
   G__memfunc_setup("IsObjectType",1205,G__G__MLIB_901_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - o C - 'Char_t' 10 - szType", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TObject*, const Char_t*))(&TMTools::IsObjectType) ), 0);
   G__memfunc_setup("CheckObject",1077,G__G__MLIB_901_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - s U 'TFile' - 0 - f", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Char_t*, TFile*))(&TMTools::CheckObject) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMObjectCollection(void) {
   /* TMObjectCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection));
   G__memfunc_setup("TMObjectCollection",1796,G__G__MLIB_902_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMObjectCollection",1796,G__G__MLIB_902_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__MLIB_902_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataObject",1265,G__G__MLIB_902_0_4, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEmptyTargetObject",2029,G__G__MLIB_902_0_5, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignalObject",1493,G__G__MLIB_902_0_6, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignal1Object",1542,G__G__MLIB_902_0_7, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSignal2Object",1543,G__G__MLIB_902_0_8, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackgroundObject",1911,G__G__MLIB_902_0_9, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalObject",1403,G__G__MLIB_902_0_10, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitObject",1178,G__G__MLIB_902_0_11, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayObject",1398,G__G__MLIB_902_0_12, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayObject",1398,G__G__MLIB_902_0_13, 85, G__get_linked_tagnum(&G__G__MLIBLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArraySize",1210,G__G__MLIB_902_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEBin",638,G__G__MLIB_902_0_15, 85, G__get_linked_tagnum(&G__G__MLIBLN_TMEBin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTCBins",913,G__G__MLIB_902_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCBin",720,G__G__MLIB_902_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCTBins",913,G__G__MLIB_902_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMMBins",916,G__G__MLIB_902_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCTBin",720,G__G__MLIB_902_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMMBin",723,G__G__MLIB_902_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEnergyBin",1164,G__G__MLIB_902_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMEBin' - 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add3DBin",665,G__G__MLIB_902_0_23, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TMEBin' - 0 - e i - 'Int_t' 0 - nCTbin "
"i - 'Int_t' 0 - iCTbin i - 'Int_t' 0 - nMMbin "
"i - 'Int_t' 0 - iMMbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataObject",1242,G__G__MLIB_902_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEmptyTargetObject",2006,G__G__MLIB_902_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSignalObject",1470,G__G__MLIB_902_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSignal1Object",1519,G__G__MLIB_902_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSignal2Object",1520,G__G__MLIB_902_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBackgroundObject",1888,G__G__MLIB_902_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTotalObject",1380,G__G__MLIB_902_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFitObject",1155,G__G__MLIB_902_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddArrayObject",1375,G__G__MLIB_902_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n U 'TObject' - 2 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoRange",1300,G__G__MLIB_902_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__G__MLIB_902_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"all\"' szType d - 'Double_t' 0 '0.' xMin "
"d - 'Double_t' 0 '300.' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFitCollection",1725,G__G__MLIB_902_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1000.' xMin d - 'Double_t' 0 '1000.' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPaperCollection",1938,G__G__MLIB_902_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '-1000.' xMin d - 'Double_t' 0 '1000.' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawArrayCollection",1945,G__G__MLIB_902_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '1' iRebin d - 'Double_t' 0 '-1000.' xMin "
"d - 'Double_t' 0 '1000.' xMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_902_0_38, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMObjectCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_902_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMObjectCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_902_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMObjectCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_902_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMObjectCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_902_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_902_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMObjectCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_902_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMObjectCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_902_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMObjectCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_902_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMObjectCollection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMObjectCollection", 1796, G__G__MLIB_902_0_50, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection), -1, 0, 1, 1, 1, 0, "u 'TMObjectCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMObjectCollection", 1922, G__G__MLIB_902_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__MLIB_902_0_52, (int) ('u'), G__get_linked_tagnum(&G__G__MLIBLN_TMObjectCollection), -1, 1, 1, 1, 1, 0, "u 'TMObjectCollection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMCuts(void) {
   /* TMCuts */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMCuts));
   G__memfunc_setup("FitMMnew",775,G__G__MLIB_903_0_1, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TMObjectCollection' - 0 - m C - 'Char_t' 10 - szName "
"i - 'Int_t' 0 '1' iCT i - 'Int_t' 0 '10' iRebinMM "
"U 'TOEnergyThetaCut' - 0 '0' e", (char*)NULL, (void*) G__func2void( (void (*)(TMObjectCollection*, const Char_t*, Int_t, Int_t, TOEnergyThetaCut*))(&TMCuts::FitMMnew) ), 0);
   G__memfunc_setup("FitMM",445,G__G__MLIB_903_0_2, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'TMObjectCollection' - 0 - m C - 'Char_t' 10 - szName "
"i - 'Int_t' 0 '1' iCT i - 'Int_t' 0 '10' iRebinMM "
"g - 'Bool_t' 0 'kTRUE' kFit g - 'Bool_t' 0 'kFALSE' kEmpty "
"g - 'Bool_t' 0 'kFALSE' k2Empty", (char*)NULL, (void*) G__func2void( (void (*)(TMObjectCollection*, const Char_t*, Int_t, Int_t, Bool_t, Bool_t, Bool_t))(&TMCuts::FitMM) ), 0);
   G__memfunc_setup("SubtractIMfromMM",1580,G__G__MLIB_903_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - iCT U 'TFile' - 0 - fDataIn "
"U 'TFile' - 0 - fMCIn C - 'Char_t' 10 - szHin "
"C - 'Char_t' 10 - szHout", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, TFile*, TFile*, const Char_t*, const Char_t*))(&TMCuts::SubtractIMfromMM) ), 0);
   G__memfunc_setup("SubtractEmptyTarget",1982,G__G__MLIB_903_0_4, 85, G__get_linked_tagnum(&G__G__MLIBLN_TH2F), -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - f U 'TFile' - 0 - fCorr "
"C - 'Char_t' 10 - szName", (char*)NULL, (void*) G__func2void( (TH2F* (*)(TFile*, TFile*, const Char_t*))(&TMCuts::SubtractEmptyTarget) ), 0);
   G__memfunc_setup("FitCopNew",879,G__G__MLIB_903_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TMObjectCollection' - 0 - m C - 'Char_t' 10 - szName "
"i - 'Int_t' 0 '1' iCT i - 'Int_t' 0 '10' iRebinMM "
"U 'TOEnergyThetaCut' - 0 '0' e", (char*)NULL, (void*) G__func2void( (void (*)(TMObjectCollection*, const Char_t*, Int_t, Int_t, TOEnergyThetaCut*))(&TMCuts::FitCopNew) ), 0);
   G__memfunc_setup("FitCop",581,G__G__MLIB_903_0_6, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'TMObjectCollection' - 0 - m C - 'Char_t' 10 - szName "
"i - 'Int_t' 0 '1' iCT i - 'Int_t' 0 '10' iRebinMM "
"g - 'Bool_t' 0 'kTRUE' kFit d - 'Double_t' 0 '100.' fLeft "
"d - 'Double_t' 0 '260.' fRight", (char*)NULL, (void*) G__func2void( (void (*)(TMObjectCollection*, const Char_t*, Int_t, Int_t, Bool_t, Double_t, Double_t))(&TMCuts::FitCop) ), 0);
   G__memfunc_setup("FitDEvsE",730,G__G__MLIB_903_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2F' - 0 - h i - 'Int_t' 0 - iR "
"d - 'Double_t' 0 '3.' fSigma g - 'Bool_t' 0 'kFALSE' kMC", (char*)NULL, (void*) G__func2void( (void (*)(TH2F*, Int_t, Double_t, Bool_t))(&TMCuts::FitDEvsE) ), 0);
   G__memfunc_setup("FitDEvsTOFx",1014,G__G__MLIB_903_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2F' - 0 - h i - 'Int_t' 0 - iR "
"d - 'Double_t' 0 '3.' fSigma g - 'Bool_t' 0 'kFALSE' kMC", (char*)NULL, (void*) G__func2void( (void (*)(TH2F*, Int_t, Double_t, Bool_t))(&TMCuts::FitDEvsTOFx) ), 0);
   G__memfunc_setup("FitDEvsTOFy",1015,G__G__MLIB_903_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2F' - 0 - h i - 'Int_t' 0 - iR", (char*)NULL, (void*) G__func2void( (void (*)(TH2F*, Int_t))(&TMCuts::FitDEvsTOFy) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMFit(void) {
   /* TMFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMFit));
   G__memfunc_setup("TMFit",452,G__G__MLIB_904_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMFit",452,G__G__MLIB_904_0_2, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMFit), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - szName C - 'Char_t' 10 - szTitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberCosThetaBins",2108,G__G__MLIB_904_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ct", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberIterations",1975,G__G__MLIB_904_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputDataFilename",2007,G__G__MLIB_904_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputMCSignalFilename",2379,G__G__MLIB_904_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputMCSignal1Filename",2428,G__G__MLIB_904_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputMCSignal2Filename",2429,G__G__MLIB_904_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInputMCBackgroundFilenamePrefix",3419,G__G__MLIB_904_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfficiencyFilename",2114,G__G__MLIB_904_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyEfficiency",1531,G__G__MLIB_904_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundConfig",1922,G__G__MLIB_904_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackground1Config",1971,G__G__MLIB_904_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackground2Config",1972,G__G__MLIB_904_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name d - 'Double_t' 0 '1.' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundContributionIndices",3307,G__G__MLIB_904_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutHistoName",1504,G__G__MLIB_904_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetExcitationFunctionHistoName",3090,G__G__MLIB_904_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutAxisTitle",1519,G__G__MLIB_904_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTwoSignals",1335,G__G__MLIB_904_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRebin",796,G__G__MLIB_904_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameterFitMethod",2129,G__G__MLIB_904_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameterFitPolynomials",2695,G__G__MLIB_904_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - nameE C - 'Char_t' 10 - nameCT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitOption",1224,G__G__MLIB_904_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlobalFitRange",1677,G__G__MLIB_904_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignalFitRange",1690,G__G__MLIB_904_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSignalFitHeight",1798,G__G__MLIB_904_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussFitRange",1599,G__G__MLIB_904_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussFitHeight",1707,G__G__MLIB_904_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussFitMean",1491,G__G__MLIB_904_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up "
"d - 'Double_t' 0 - tol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGaussFitSigma",1603,G__G__MLIB_904_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameterLimits",1855,G__G__MLIB_904_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutSigma",1097,G__G__MLIB_904_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutRange",1093,G__G__MLIB_904_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lo d - 'Double_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutFitRange",1384,G__G__MLIB_904_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 0 - lo C - 'Char_t' 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutFitPolynomials",2066,G__G__MLIB_904_0_35, 121, -1, -1, 0, 8, 1, 1, 0, 
"C - 'Char_t' 0 - em C - 'Char_t' 0 - es "
"C - 'Char_t' 0 - el C - 'Char_t' 0 - eu "
"C - 'Char_t' 0 - cm C - 'Char_t' 0 - cs "
"C - 'Char_t' 0 - cl C - 'Char_t' 0 - cu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyIteration",1461,G__G__MLIB_904_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumPadX",969,G__G__MLIB_904_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumPadY",970,G__G__MLIB_904_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNDC",513,G__G__MLIB_904_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxisMin",997,G__G__MLIB_904_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAxisMax",999,G__G__MLIB_904_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetDensity",1651,G__G__MLIB_904_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchingRatio",1719,G__G__MLIB_904_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInvariantMassValue",2153,G__G__MLIB_904_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IntegrateAll",1212,G__G__MLIB_904_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Configure",930,G__G__MLIB_904_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBackgroundContributions",2719,G__G__MLIB_904_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCollection",1336,G__G__MLIB_904_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitParameters",1335,G__G__MLIB_904_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__G__MLIB_904_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iterate",718,G__G__MLIB_904_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n g - 'Bool_t' 0 - kInit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAll",680,G__G__MLIB_904_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanGraph",981,G__G__MLIB_904_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraphErrors' - 0 - g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFit",689,G__G__MLIB_904_0_54, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - iNPadX i - 'Int_t' 0 - iNPadY "
"i - 'Int_t' 0 - iNDC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawChiSquare",1299,G__G__MLIB_904_0_55, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawParameters",1442,G__G__MLIB_904_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCuts",813,G__G__MLIB_904_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCutRegions",1425,G__G__MLIB_904_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__MLIB_904_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_904_0_60, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_904_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_904_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_904_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_904_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_904_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_904_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_904_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_904_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMFit", 452, G__G__MLIB_904_0_72, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMFit), -1, 0, 1, 1, 1, 0, "u 'TMFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMFit", 578, G__G__MLIB_904_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMPluto(void) {
   /* TMPluto */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MLIBLN_TMPluto));
   G__memfunc_setup("TMPluto",693,G__G__MLIB_999_0_1, 105, G__get_linked_tagnum(&G__G__MLIBLN_TMPluto), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - reac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamDistribution",1953,G__G__MLIB_999_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - dis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamEnergy",1291,G__G__MLIB_999_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - eMin d - 'Double_t' 0 - eMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfEvents",1727,G__G__MLIB_999_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberOfFiles",1597,G__G__MLIB_999_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nfi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,G__G__MLIB_999_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputPath",1354,G__G__MLIB_999_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filelocation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamDiameter",1484,G__G__MLIB_999_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - diam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetLength",1525,G__G__MLIB_999_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPluto2Mkin",1281,G__G__MLIB_999_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - IsConv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIS",456,G__G__MLIB_999_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - szReac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFS",453,G__G__MLIB_999_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - szReac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMembers",1015,G__G__MLIB_999_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitHierarchy",1331,G__G__MLIB_999_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__MLIB_999_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__G__MLIB_999_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__MLIB_999_0_17, 85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMPluto::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__MLIB_999_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMPluto::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__MLIB_999_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMPluto::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__MLIB_999_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMPluto::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__MLIBLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MLIB_999_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__MLIB_999_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMPluto::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MLIB_999_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMPluto::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__MLIB_999_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMPluto::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MLIB_999_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMPluto::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMPluto", 693, G__G__MLIB_999_0_29, (int) ('i'), G__get_linked_tagnum(&G__G__MLIBLN_TMPluto), -1, 0, 1, 1, 1, 0, "u 'TMPluto' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMPluto", 819, G__G__MLIB_999_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MLIB() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MLIB() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MLIB() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MLIBLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMEBin = { "TMEBin" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMCollection = { "TMCollection" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TOEnergyThetaCut = { "TOEnergyThetaCut" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TOEnergyThetaData = { "TOEnergyThetaData" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMFitCollection = { "TMFitCollection" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMCombinedFunctor = { "TMCombinedFunctor" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMCombinedFit = { "TMCombinedFit" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMEnergyThetaCut = { "TMEnergyThetaCut" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMFunctor = { "TMFunctor" , 110 , -1 };
G__linked_taginfo G__G__MLIBLN_TMTools = { "TMTools" , 110 , -1 };
G__linked_taginfo G__G__MLIBLN_TMObjectCollection = { "TMObjectCollection" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMCuts = { "TMCuts" , 110 , -1 };
G__linked_taginfo G__G__MLIBLN_TMFit = { "TMFit" , 99 , -1 };
G__linked_taginfo G__G__MLIBLN_TMPluto = { "TMPluto" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MLIB() {
  G__G__MLIBLN_TClass.tagnum = -1 ;
  G__G__MLIBLN_TBuffer.tagnum = -1 ;
  G__G__MLIBLN_TMemberInspector.tagnum = -1 ;
  G__G__MLIBLN_TObject.tagnum = -1 ;
  G__G__MLIBLN_TNamed.tagnum = -1 ;
  G__G__MLIBLN_TString.tagnum = -1 ;
  G__G__MLIBLN_TList.tagnum = -1 ;
  G__G__MLIBLN_TF1.tagnum = -1 ;
  G__G__MLIBLN_TH1.tagnum = -1 ;
  G__G__MLIBLN_TH1D.tagnum = -1 ;
  G__G__MLIBLN_TH1F.tagnum = -1 ;
  G__G__MLIBLN_TMEBin.tagnum = -1 ;
  G__G__MLIBLN_TMCollection.tagnum = -1 ;
  G__G__MLIBLN_TH2.tagnum = -1 ;
  G__G__MLIBLN_TH2F.tagnum = -1 ;
  G__G__MLIBLN_TGraphErrors.tagnum = -1 ;
  G__G__MLIBLN_TOEnergyThetaCut.tagnum = -1 ;
  G__G__MLIBLN_TFile.tagnum = -1 ;
  G__G__MLIBLN_TOEnergyThetaData.tagnum = -1 ;
  G__G__MLIBLN_TMFitCollection.tagnum = -1 ;
  G__G__MLIBLN_TMCombinedFunctor.tagnum = -1 ;
  G__G__MLIBLN_TMCombinedFit.tagnum = -1 ;
  G__G__MLIBLN_TMEnergyThetaCut.tagnum = -1 ;
  G__G__MLIBLN_TMFunctor.tagnum = -1 ;
  G__G__MLIBLN_TMTools.tagnum = -1 ;
  G__G__MLIBLN_TMObjectCollection.tagnum = -1 ;
  G__G__MLIBLN_TMCuts.tagnum = -1 ;
  G__G__MLIBLN_TMFit.tagnum = -1 ;
  G__G__MLIBLN_TMPluto.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MLIB() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TString);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TList);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TF1);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMEBin),sizeof(TMEBin),-1,324864,"Bin of differential cross section",G__setup_memvarTMEBin,G__setup_memfuncTMEBin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMCollection),sizeof(TMCollection),-1,324864,"Bin of differential cross section",G__setup_memvarTMCollection,G__setup_memfuncTMCollection);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TH2F);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TOEnergyThetaCut);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__MLIBLN_TOEnergyThetaData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMFitCollection),sizeof(TMFitCollection),-1,128256,"fit object collection",G__setup_memvarTMFitCollection,G__setup_memfuncTMFitCollection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMCombinedFunctor),sizeof(TMCombinedFunctor),-1,324864,(char*)NULL,G__setup_memvarTMCombinedFunctor,G__setup_memfuncTMCombinedFunctor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMCombinedFit),sizeof(TMCombinedFit),-1,324864,(char*)NULL,G__setup_memvarTMCombinedFit,G__setup_memfuncTMCombinedFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMEnergyThetaCut),sizeof(TMEnergyThetaCut),-1,324864,"Bin of differential cross section",G__setup_memvarTMEnergyThetaCut,G__setup_memfuncTMEnergyThetaCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMFunctor),0,-1,0,(char*)NULL,G__setup_memvarTMFunctor,G__setup_memfuncTMFunctor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMTools),0,-1,0,(char*)NULL,G__setup_memvarTMTools,G__setup_memfuncTMTools);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMObjectCollection),sizeof(TMObjectCollection),-1,324864,"Bin of differential cross section",G__setup_memvarTMObjectCollection,G__setup_memfuncTMObjectCollection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMCuts),0,-1,0,(char*)NULL,G__setup_memvarTMCuts,G__setup_memfuncTMCuts);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMFit),sizeof(TMFit),-1,324864,(char*)NULL,G__setup_memvarTMFit,G__setup_memfuncTMFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__MLIBLN_TMPluto),sizeof(TMPluto),-1,324608,"pluto class",G__setup_memvarTMPluto,G__setup_memfuncTMPluto);
}
extern "C" void G__cpp_setupG__MLIB(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MLIB()");
  G__set_cpp_environmentG__MLIB();
  G__cpp_setup_tagtableG__MLIB();

  G__cpp_setup_inheritanceG__MLIB();

  G__cpp_setup_typetableG__MLIB();

  G__cpp_setup_memvarG__MLIB();

  G__cpp_setup_memfuncG__MLIB();
  G__cpp_setup_globalG__MLIB();
  G__cpp_setup_funcG__MLIB();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MLIB();
  return;
}
class G__cpp_setup_initG__MLIB {
  public:
    G__cpp_setup_initG__MLIB() { G__add_setup_func("G__MLIB",(G__incsetup)(&G__cpp_setupG__MLIB)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MLIB() { G__remove_setup_func("G__MLIB"); }
};
G__cpp_setup_initG__MLIB G__cpp_setup_initializerG__MLIB;

